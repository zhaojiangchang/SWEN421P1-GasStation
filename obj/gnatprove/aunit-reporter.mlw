(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_short_integer__content "model_trace:" : short_short_integer }
 
 function short_short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_integer__content "model_trace:" : short_integer }
 
 function short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer__ref #"system.ads" 1 0 0# =
  { mutable integer__content "model_trace:" : integer }
 
 function integer__ref___projection #"system.ads" 1 0 0# 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc #"system.ads" 1 0 0# 
   (x : integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_integer__content "model_trace:" : long_integer }
 
 function long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_long_integer__content "model_trace:" : long_long_integer }
 
 function long_long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type natural__ref #"system.ads" 1 0 0# =
  { mutable natural__content "model_trace:" : natural }
 
 function natural__ref___projection #"system.ads" 1 0 0# 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc #"system.ads" 1 0 0# 
   (x : natural__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type positive__ref #"system.ads" 1 0 0# =
  { mutable positive__content "model_trace:" : positive }
 
 function positive__ref___projection #"system.ads" 1 0 0# 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc #"system.ads" 1 0 0# 
   (x : positive__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type short_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type short_float__ref #"system.ads" 1 0 0# =
  { mutable short_float__content "model_trace:" : short_float }
 
 function short_float__ref___projection #"system.ads" 1 0 0# 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc #"system.ads" 1 0 0# 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type float__ref #"system.ads" 1 0 0# =
  { mutable float__content "model_trace:" : float }
 
 function float__ref___projection #"system.ads" 1 0 0# 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc #"system.ads" 1 0 0# 
   (x : float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_float__ref #"system.ads" 1 0 0# =
  { mutable long_float__content "model_trace:" : long_float }
 
 function long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc #"system.ads" 1 0 0# 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_long_float__ref #"system.ads" 1 0 0# =
  { mutable long_long_float__content "model_trace:" : long_long_float }
 
 function long_long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_float__ref) : long_long_float =
  a.long_long_float__content
 
 meta "model_projection" function long_long_float__ref___projection
 
 meta "inline : no" function long_long_float__ref___projection
 
 val long_long_float__havoc #"system.ads" 1 0 0# 
   (x : long_long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  255
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type character__ref #"system.ads" 1 0 0# =
  { mutable character__content "model_trace:" : character }
 
 function character__ref___projection #"system.ads" 1 0 0# 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc #"system.ads" 1 0 0# 
   (x : character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  65535
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_character__content "model_trace:" : wide_character }
 
 function wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_character__content "model_trace:" : wide_wide_character }
 
 function wide_wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string #"system.ads" 1 0 0# 
   (x : Main.__image) : string
 
 function from_string #"system.ads" 1 0 0# 
   (x : string) : Main.__image
 
 type string__ref #"system.ads" 1 0 0# =
  { mutable string__content "model_trace:" : string }
 
 function string__ref___projection #"system.ads" 1 0 0# 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc #"system.ads" 1 0 0# 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Array__Int__Standard__wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_string__content "model_trace:" : wide_string }
 
 function wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Array__Int__Standard__wide_wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_string__content "model_trace:" : wide_wide_string }
 
 function wide_wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration #"system.ads" 1 0 0# 
 
 function inv_small #"system.ads" 1 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"system.ads" 1 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type duration__ref #"system.ads" 1 0 0# =
  { mutable duration__content "model_trace:" : duration }
 
 function duration__ref___projection #"system.ads" 1 0 0# 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc #"system.ads" 1 0 0# 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"system.ads" 1 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref___projection #"system.ads" 1 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc #"system.ads" 1 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"system.ads" 1 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref___projection #"system.ads" 1 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc #"system.ads" 1 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"system.ads" 1 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref___projection #"system.ads" 1 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc #"system.ads" 1 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"system.ads" 1 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref___projection #"system.ads" 1 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc #"system.ads" 1 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type universal_integer__ref #"system.ads" 1 0 0# =
  { mutable universal_integer__content "model_trace:" : universal_integer }
 
 function universal_integer__ref___projection #"system.ads" 1 0 0# 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc #"system.ads" 1 0 0# 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type universal_real #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type universal_real__ref #"system.ads" 1 0 0# =
  { mutable universal_real__content "model_trace:" : universal_real }
 
 function universal_real__ref___projection #"system.ads" 1 0 0# 
   (a : universal_real__ref) : universal_real =
  a.universal_real__content
 
 meta "model_projection" function universal_real__ref___projection
 
 meta "inline : no" function universal_real__ref___projection
 
 val universal_real__havoc #"system.ads" 1 0 0# 
   (x : universal_real__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "status" defined at aunit.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Aunit__status
 use import "_gnatprove_standard".Main
 use import "int".Int

 type status #"aunit.ads" 40 0 0# 
 
 function first #"aunit.ads" 40 0 0# 
   : int =
  0
 
 function last #"aunit.ads" 40 0 0# 
   : int =
  1
 
 predicate in_range #"aunit.ads" 40 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = status, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type status__ref #"aunit.ads" 40 0 0# =
  { mutable status__content "model_trace:" : status }
 
 function status__ref___projection #"aunit.ads" 40 0 0# 
   (a : status__ref) : status =
  a.status__content
 
 meta "model_projection" function status__ref___projection
 
 meta "inline : no" function status__ref___projection
 
 val status__havoc #"aunit.ads" 40 0 0# 
   (x : status__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at aunit.ads:44, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__format__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"aunit.ads" 44 0 0# "model_projected" "model_trace:2437" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at aunit.ads:44, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__format__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "length" defined at aunit.ads:45, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__message_alloc__length
 use import "_gnatprove_standard".Main

 function length #"aunit.ads" 45 0 0# "model" "model_trace:2456" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "length" defined at aunit.ads:45, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__message_alloc__length__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "test" defined at aunit-tests.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Aunit__tests__test
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"system.ads" 1 0 0# =
  { rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields___projection #"system.ads" 1 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields___projection
 
 meta "inline : no" function __split_fields___projection
 
 type __split_fields__ref #"system.ads" 1 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref___projection #"system.ads" 1 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc #"system.ads" 1 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type test #"aunit-tests.ads" 43 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function test___projection #"aunit-tests.ads" 43 0 0# 
   (a : test) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function test___projection
 
 meta "inline : no" function test___projection
 
 function test_2__projection #"aunit-tests.ads" 43 0 0# 
   (a : test) : int =
  a.attr__tag
 
 meta "model_projection" function test_2__projection
 
 meta "inline : no" function test_2__projection
 
 function user_eq #"aunit-tests.ads" 43 0 0# 
   (a : test) (b : test) : bool
 
 function __dispatch_eq #"aunit-tests.ads" 43 0 0# 
   (a : test) (b : test) : bool
 
 function __tag #"aunit-tests.ads" 43 0 0# 
   : int
 
 function value__size #"aunit-tests.ads" 43 0 0# 
   : int
 
 function object__size #"aunit-tests.ads" 43 0 0# 
   (a : test) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : test.
   ((object__size a) >= 0))
 
 function dummy #"aunit-tests.ads" 43 0 0# 
   : test
 
 type test__ref #"aunit-tests.ads" 43 0 0# =
  { mutable test__content "model_trace:" : test }
 
 function test__ref___projection #"aunit-tests.ads" 43 0 0# 
   (a : test__ref) : test =
  a.test__content
 
 meta "model_projection" function test__ref___projection
 
 meta "inline : no" function test__ref___projection
 
 val test__havoc #"aunit-tests.ads" 43 0 0# 
   (x : test__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TtestC" defined at aunit-tests.ads:38, created in Gnat2Why.Types.Translate_Type *)
module Aunit__tests__TtestC
 use export Aunit__tests__test
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "test_filter" defined at aunit-test_filters.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_filters__test_filter
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-tests.ads" 43 0 0# =
  { rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_2__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_2__projection
 
 meta "inline : no" function __split_fields_2__projection
 
 type __split_fields__ref #"aunit-tests.ads" 43 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_2__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_2__projection
 
 meta "inline : no" function __split_fields__ref_2__projection
 
 val __split_fields__havoc #"aunit-tests.ads" 43 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type test_filter #"aunit-test_filters.ads" 70 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function test_filter___projection #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function test_filter___projection
 
 meta "inline : no" function test_filter___projection
 
 function test_filter_2__projection #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) : int =
  a.attr__tag
 
 meta "model_projection" function test_filter_2__projection
 
 meta "inline : no" function test_filter_2__projection
 
 function user_eq #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) (b : test_filter) : bool
 
 function __dispatch_eq #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) (b : test_filter) : bool
 
 function __tag #"aunit-test_filters.ads" 70 0 0# 
   : int
 
 function value__size #"aunit-test_filters.ads" 70 0 0# 
   : int
 
 function object__size #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : test_filter.
   ((object__size a) >= 0))
 
 function dummy #"aunit-test_filters.ads" 70 0 0# 
   : test_filter
 
 type test_filter__ref #"aunit-test_filters.ads" 70 0 0# =
  { mutable test_filter__content "model_trace:" : test_filter }
 
 function test_filter__ref___projection #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter__ref) : test_filter =
  a.test_filter__content
 
 meta "model_projection" function test_filter__ref___projection
 
 meta "inline : no" function test_filter__ref___projection
 
 val test_filter__havoc #"aunit-test_filters.ads" 70 0 0# 
   (x : test_filter__ref) : unit
  writes {x}

end

(* Module for defining the constant "filter" defined at aunit-test_filters.ads:43, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__is_active__filter
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__test_filter

 function filter #"aunit-test_filters.ads" 43 0 0# "model_projected" "model_trace:2639" 
   : Aunit__test_filters__test_filter.test_filter
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_filters.ads" 70 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filter" defined at aunit-test_filters.ads:43, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__is_active__filter__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "t" defined at aunit-test_filters.ads:44, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__is_active__t
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test

 function t #"aunit-test_filters.ads" 44 0 0# "model_projected" "model_trace:2648" 
   : Aunit__tests__test.test
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-tests.ads" 43 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-test_filters.ads:44, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__is_active__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_active" defined at aunit-test_filters.ads:42, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_filters__is_active
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_filters__test_filter

 function is_active #"aunit-test_filters.ads" 42 0 0# 
   (filter : Aunit__test_filters__test_filter.test_filter) (t : Aunit__tests__test.test) : bool
 
 namespace Dispatch
  function is_active #"aunit-test_filters.ads" 42 0 0# 
    (filter : Aunit__test_filters__test_filter.test_filter) (t : Aunit__tests__test.test) : bool

 end

end

(* Module for axiomatizing type "name_filter" defined at aunit-test_filters.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_filters__name_filter
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Aunit__test_filters__test_filter

 type __split_fields #"aunit-tests.ads" 43 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_3__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_3__projection
 
 meta "inline : no" function __split_fields_3__projection
 
 function __split_fields_4__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_4__projection
 
 meta "inline : no" function __split_fields_4__projection
 
 type __split_fields__ref #"aunit-tests.ads" 43 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_3__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_3__projection
 
 meta "inline : no" function __split_fields__ref_3__projection
 
 val __split_fields__havoc #"aunit-tests.ads" 43 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type name_filter #"aunit-test_filters.ads" 48 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function name_filter___projection #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function name_filter___projection
 
 meta "inline : no" function name_filter___projection
 
 function name_filter_2__projection #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) : int =
  a.attr__tag
 
 meta "model_projection" function name_filter_2__projection
 
 meta "inline : no" function name_filter_2__projection
 
 function hide_ext__ #"aunit-test_filters.ads" 48 0 0# 
   (rec__ext__ : Main.__private) (rec__main__ : Main.__private) : Main.__private
 
 function extract__ext__ #"aunit-test_filters.ads" 48 0 0# 
   (x : Main.__private) : Main.__private
 
 function extract__main__ #"aunit-test_filters.ads" 48 0 0# 
   (x : Main.__private) : Main.__private
 
 function to_base #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) : Aunit__test_filters__test_filter.test_filter =
  { Aunit__test_filters__test_filter.__split_fields = { Aunit__test_filters__test_filter.rec__ext__ = (hide_ext__ a.__split_fields.rec__ext__ a.__split_fields.rec__main__) }; Aunit__test_filters__test_filter.attr__tag = a.attr__tag }
 
 function of_base #"aunit-test_filters.ads" 70 0 0# 
   (r : Aunit__test_filters__test_filter.test_filter) : name_filter =
  { __split_fields = { rec__ext__ = (extract__ext__ r.Aunit__test_filters__test_filter.__split_fields.Aunit__test_filters__test_filter.rec__ext__); rec__main__ = (extract__main__ r.Aunit__test_filters__test_filter.__split_fields.Aunit__test_filters__test_filter.rec__ext__) }; attr__tag = r.Aunit__test_filters__test_filter.attr__tag }
 
 function user_eq #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) (b : name_filter) : bool
 
 function __tag #"aunit-test_filters.ads" 48 0 0# 
   : int
 
 function value__size #"aunit-test_filters.ads" 48 0 0# 
   : int
 
 function object__size #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : name_filter.
   ((object__size a) >= 0))
 
 function dummy #"aunit-test_filters.ads" 48 0 0# 
   : name_filter
 
 type name_filter__ref #"aunit-test_filters.ads" 48 0 0# =
  { mutable name_filter__content "model_trace:" : name_filter }
 
 function name_filter__ref___projection #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter__ref) : name_filter =
  a.name_filter__content
 
 meta "model_projection" function name_filter__ref___projection
 
 meta "inline : no" function name_filter__ref___projection
 
 val name_filter__havoc #"aunit-test_filters.ads" 48 0 0# 
   (x : name_filter__ref) : unit
  writes {x}

end

(* Module for defining the constant "name" defined at aunit-test_filters.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__set_name__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"aunit-test_filters.ads" 52 0 0# "model_projected" "model_trace:2692" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at aunit-test_filters.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__set_name__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filter" defined at aunit-test_filters.ads:65, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__is_active__2__filter
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__name_filter

 function filter #"aunit-test_filters.ads" 65 0 0# "model_projected" "model_trace:2710" 
   : Aunit__test_filters__name_filter.name_filter
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_filters.ads" 48 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filter" defined at aunit-test_filters.ads:65, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__is_active__2__filter__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "t" defined at aunit-test_filters.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__is_active__2__t
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test

 function t #"aunit-test_filters.ads" 66 0 0# "model_projected" "model_trace:2719" 
   : Aunit__tests__test.test
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-tests.ads" 43 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-test_filters.ads:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__is_active__2__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Ttest_filterC" defined at aunit-test_filters.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_filters__Ttest_filterC
 use export Aunit__test_filters__test_filter
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tname_filterC" defined at aunit-test_filters.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_filters__Tname_filterC
 use export Aunit__test_filters__name_filter
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "hash_type" defined at ada_containers.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Ada_containers__hash_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type hash_type #"ada_containers.ads" 19 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"ada_containers.ads" 19 0 0# 
   : BV32.t
 
 function first #"ada_containers.ads" 19 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"ada_containers.ads" 19 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"ada_containers.ads" 19 0 0# 
   : int =
  0
 
 function last_int #"ada_containers.ads" 19 0 0# 
   : int =
  4294967295
 
 predicate in_range #"ada_containers.ads" 19 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"ada_containers.ads" 19 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = hash_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type hash_type__ref #"ada_containers.ads" 19 0 0# =
  { mutable hash_type__content "model_trace:" : hash_type }
 
 function hash_type__ref___projection #"ada_containers.ads" 19 0 0# 
   (a : hash_type__ref) : hash_type =
  a.hash_type__content
 
 meta "model_projection" function hash_type__ref___projection
 
 meta "inline : no" function hash_type__ref___projection
 
 val hash_type__havoc #"ada_containers.ads" 19 0 0# 
   (x : hash_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tcount_typeB" defined at ada_containers.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Ada_containers__Tcount_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcount_typeB #"ada_containers.ads" 20 0 0# 
 
 function first #"ada_containers.ads" 20 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"ada_containers.ads" 20 0 0# 
   : int =
  2147483647
 
 predicate in_range #"ada_containers.ads" 20 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcount_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tcount_typeB__ref #"ada_containers.ads" 20 0 0# =
  { mutable tcount_typeB__content "model_trace:" : tcount_typeB }
 
 function tcount_typeB__ref___projection #"ada_containers.ads" 20 0 0# 
   (a : tcount_typeB__ref) : tcount_typeB =
  a.tcount_typeB__content
 
 meta "model_projection" function tcount_typeB__ref___projection
 
 meta "inline : no" function tcount_typeB__ref___projection
 
 val tcount_typeB__havoc #"ada_containers.ads" 20 0 0# 
   (x : tcount_typeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "count_type" defined at ada_containers.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Ada_containers__count_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type count_type #"ada_containers.ads" 20 0 0# 
 
 function first #"ada_containers.ads" 20 0 0# 
   : int =
  0
 
 function last #"ada_containers.ads" 20 0 0# 
   : int =
  2147483647
 
 predicate in_range #"ada_containers.ads" 20 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = count_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type count_type__ref #"ada_containers.ads" 20 0 0# =
  { mutable count_type__content "model_trace:" : count_type }
 
 function count_type__ref___projection #"ada_containers.ads" 20 0 0# 
   (a : count_type__ref) : count_type =
  a.count_type__content
 
 meta "model_projection" function count_type__ref___projection
 
 meta "inline : no" function count_type__ref___projection
 
 val count_type__havoc #"ada_containers.ads" 20 0 0# 
   (x : count_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "time" defined at a-calend.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__time
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"ada_containers.ads" 20 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_5__projection #"ada_containers.ads" 20 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_5__projection
 
 meta "inline : no" function __split_fields_5__projection
 
 type __split_fields__ref #"ada_containers.ads" 20 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_4__projection #"ada_containers.ads" 20 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_4__projection
 
 meta "inline : no" function __split_fields__ref_4__projection
 
 val __split_fields__havoc #"ada_containers.ads" 20 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type time #"a-calend.ads" 44 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function time___projection #"a-calend.ads" 44 0 0# 
   (a : time) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function time___projection
 
 meta "inline : no" function time___projection
 
 function bool_eq #"a-calend.ads" 44 0 0# 
   (a : time) (b : time) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"a-calend.ads" 44 0 0# 
   (a : time) (b : time) : bool
 
 function value__size #"a-calend.ads" 44 0 0# 
   : int
 
 function object__size #"a-calend.ads" 44 0 0# 
   (a : time) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : time.
   ((object__size a) >= 0))
 
 function dummy #"a-calend.ads" 44 0 0# 
   : time
 
 type time__ref #"a-calend.ads" 44 0 0# =
  { mutable time__content "model_trace:" : time }
 
 function time__ref___projection #"a-calend.ads" 44 0 0# 
   (a : time__ref) : time =
  a.time__content
 
 meta "model_projection" function time__ref___projection
 
 meta "inline : no" function time__ref___projection
 
 val time__havoc #"a-calend.ads" 44 0 0# 
   (x : time__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "year_number" defined at a-calend.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__year_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type year_number #"a-calend.ads" 50 0 0# 
 
 function first #"a-calend.ads" 50 0 0# 
   : int =
  1901
 
 function last #"a-calend.ads" 50 0 0# 
   : int =
  2399
 
 predicate in_range #"a-calend.ads" 50 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = year_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type year_number__ref #"a-calend.ads" 50 0 0# =
  { mutable year_number__content "model_trace:" : year_number }
 
 function year_number__ref___projection #"a-calend.ads" 50 0 0# 
   (a : year_number__ref) : year_number =
  a.year_number__content
 
 meta "model_projection" function year_number__ref___projection
 
 meta "inline : no" function year_number__ref___projection
 
 val year_number__havoc #"a-calend.ads" 50 0 0# 
   (x : year_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "month_number" defined at a-calend.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__month_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type month_number #"a-calend.ads" 51 0 0# 
 
 function first #"a-calend.ads" 51 0 0# 
   : int =
  1
 
 function last #"a-calend.ads" 51 0 0# 
   : int =
  12
 
 predicate in_range #"a-calend.ads" 51 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = month_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type month_number__ref #"a-calend.ads" 51 0 0# =
  { mutable month_number__content "model_trace:" : month_number }
 
 function month_number__ref___projection #"a-calend.ads" 51 0 0# 
   (a : month_number__ref) : month_number =
  a.month_number__content
 
 meta "model_projection" function month_number__ref___projection
 
 meta "inline : no" function month_number__ref___projection
 
 val month_number__havoc #"a-calend.ads" 51 0 0# 
   (x : month_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "day_number" defined at a-calend.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__day_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type day_number #"a-calend.ads" 52 0 0# 
 
 function first #"a-calend.ads" 52 0 0# 
   : int =
  1
 
 function last #"a-calend.ads" 52 0 0# 
   : int =
  31
 
 predicate in_range #"a-calend.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = day_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type day_number__ref #"a-calend.ads" 52 0 0# =
  { mutable day_number__content "model_trace:" : day_number }
 
 function day_number__ref___projection #"a-calend.ads" 52 0 0# 
   (a : day_number__ref) : day_number =
  a.day_number__content
 
 meta "model_projection" function day_number__ref___projection
 
 meta "inline : no" function day_number__ref___projection
 
 val day_number__havoc #"a-calend.ads" 52 0 0# 
   (x : day_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "day_duration" defined at a-calend.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__day_duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type day_duration #"a-calend.ads" 56 0 0# 
 
 function inv_small #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  0
 
 function last #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  86400000000000
 
 predicate in_range #"a-calend.ads" 56 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = day_duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type day_duration__ref #"a-calend.ads" 56 0 0# =
  { mutable day_duration__content "model_trace:" : day_duration }
 
 function day_duration__ref___projection #"a-calend.ads" 56 0 0# 
   (a : day_duration__ref) : day_duration =
  a.day_duration__content
 
 meta "model_projection" function day_duration__ref___projection
 
 meta "inline : no" function day_duration__ref___projection
 
 val day_duration__havoc #"a-calend.ads" 56 0 0# 
   (x : day_duration__ref) : unit
  writes {x}

end

(* Module for defining the constant "date" defined at a-calend.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__year__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 66 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__year__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "year" defined at a-calend.ads:66, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__year
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function year #"a-calend.ads" 66 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__month__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 67 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__month__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "month" defined at a-calend.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__month
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function month #"a-calend.ads" 67 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__day__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 68 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__day__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "day" defined at a-calend.ads:68, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__day
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function day #"a-calend.ads" 68 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__seconds__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 69 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__seconds__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "seconds" defined at a-calend.ads:69, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__day_duration

 function seconds #"a-calend.ads" 69 0 0# 
   (date : Ada__calendar__time.time) : Ada__calendar__day_duration.day_duration

end

(* Module for defining the constant "date" defined at a-calend.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__split__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 72 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "year" defined at a-calend.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__year
 use import "_gnatprove_standard".Main

 function year #"a-calend.ads" 83 0 0# "model" "model_trace:5500" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "year" defined at a-calend.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__year__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "month" defined at a-calend.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__month
 use import "_gnatprove_standard".Main

 function month #"a-calend.ads" 84 0 0# "model" "model_trace:5509" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "month" defined at a-calend.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__month__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "day" defined at a-calend.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__day
 use import "_gnatprove_standard".Main

 function day #"a-calend.ads" 85 0 0# "model" "model_trace:5518" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "day" defined at a-calend.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__day__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "seconds" defined at a-calend.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 function seconds #"a-calend.ads" 86 0 0# "model_projected" "model_trace:5527" 
   : Ada__calendar__day_duration.day_duration
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "seconds" defined at a-calend.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__seconds__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "time_of" defined at a-calend.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__time_of
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function time_of #"a-calend.ads" 82 0 0# 
   (year : int) (month : int) (day : int) (seconds : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 102 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__right
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function right #"a-calend.ads" 102 0 0# "model_projected" "model_trace:5556" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd" defined at a-calend.ads:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oadd
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oadd #"a-calend.ads" 102 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__2__left
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function left #"a-calend.ads" 103 0 0# "model_projected" "model_trace:5575" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__2__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 103 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd__2" defined at a-calend.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oadd__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oadd__2 #"a-calend.ads" 103 0 0# 
   (left : Main.__fixed) (right : Ada__calendar__time.time) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 104 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__right
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function right #"a-calend.ads" 104 0 0# "model_projected" "model_trace:5612" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract" defined at a-calend.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Osubtract
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function osubtract #"a-calend.ads" 104 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__2__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 105 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__2__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 105 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract__2" defined at a-calend.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Osubtract__2
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time

 function osubtract__2 #"a-calend.ads" 105 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : Standard__duration.duration

end

(* Module for defining the constant "left" defined at a-calend.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Olt__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 111 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Olt__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 111 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at a-calend.ads:111, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Olt
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function olt #"a-calend.ads" 111 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ole__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 112 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ole__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 112 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at a-calend.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Ole
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function ole #"a-calend.ads" 112 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ogt__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 113 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ogt__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 113 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at a-calend.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Ogt
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function ogt #"a-calend.ads" 113 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oge__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 114 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oge__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 114 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at a-calend.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oge
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oge #"a-calend.ads" 114 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for axiomatizing type "time" defined at aunit-time_measure.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Aunit__time_measure__time
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__time

 type __split_fields #"a-calend.ads" 44 0 0# =
  { rec__start "model_trace:.4986" : Ada__calendar__time.time; rec__stop "model_trace:.5000" : Ada__calendar__time.time }
 
 function __split_fields_Start__projection #"a-calend.ads" 44 0 0# "model_trace:.4986" 
   (a : __split_fields) : Ada__calendar__time.time =
  a.rec__start
 
 meta "model_projection" function __split_fields_Start__projection
 
 meta "inline : no" function __split_fields_Start__projection
 
 function __split_fields_Stop__projection #"aunit-time_measure.ads" 36 0 0# "model_trace:.5000" 
   (a : __split_fields) : Ada__calendar__time.time =
  a.rec__stop
 
 meta "model_projection" function __split_fields_Stop__projection
 
 meta "inline : no" function __split_fields_Stop__projection
 
 type __split_fields__ref #"aunit-time_measure.ads" 36 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_5__projection #"aunit-time_measure.ads" 36 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_5__projection
 
 meta "inline : no" function __split_fields__ref_5__projection
 
 val __split_fields__havoc #"aunit-time_measure.ads" 36 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type time #"aunit-time_measure.ads" 36 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function time_2__projection #"aunit-time_measure.ads" 36 0 0# 
   (a : time) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function time_2__projection
 
 meta "inline : no" function time_2__projection
 
 predicate start__pred #"aunit-time_measure.ads" 36 0 0# 
   (a : time)  =
  true
 
 val rec__start_ #"aunit-time_measure.ads" 36 0 0# 
   (a : time) : Ada__calendar__time.time
  requires { (start__pred a) }
  ensures { (result = a.__split_fields.rec__start) }
 
 predicate stop__pred #"aunit-time_measure.ads" 36 0 0# 
   (a : time)  =
  true
 
 val rec__stop_ #"aunit-time_measure.ads" 36 0 0# 
   (a : time) : Ada__calendar__time.time
  requires { (stop__pred a) }
  ensures { (result = a.__split_fields.rec__stop) }
 
 function bool_eq #"aunit-time_measure.ads" 36 0 0# 
   (a : time) (b : time) : bool =
  (if (( ((Ada__calendar__time.bool_eq a.__split_fields.rec__start b.__split_fields.rec__start) = True) /\ ((Ada__calendar__time.bool_eq a.__split_fields.rec__stop b.__split_fields.rec__stop) = True) )) then (
   True) else (
   False))
 
 function user_eq #"aunit-time_measure.ads" 36 0 0# 
   (a : time) (b : time) : bool
 
 function value__size #"aunit-time_measure.ads" 36 0 0# 
   : int
 
 function object__size #"aunit-time_measure.ads" 36 0 0# 
   (a : time) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : time.
   ((object__size a) >= 0))
 
 function dummy #"aunit-time_measure.ads" 36 0 0# 
   : time
 
 type time__ref #"aunit-time_measure.ads" 36 0 0# =
  { mutable time__content "model_trace:" : time }
 
 function time__ref_2__projection #"aunit-time_measure.ads" 36 0 0# 
   (a : time__ref) : time =
  a.time__content
 
 meta "model_projection" function time__ref_2__projection
 
 meta "inline : no" function time__ref_2__projection
 
 val time__havoc #"aunit-time_measure.ads" 36 0 0# 
   (x : time__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Taunit_durationB" defined at aunit-time_measure.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Aunit__time_measure__Taunit_durationB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type taunit_durationB #"aunit-time_measure.ads" 70 0 0# 
 
 function inv_small #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"aunit-time_measure.ads" 70 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = taunit_durationB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type taunit_durationB__ref #"aunit-time_measure.ads" 70 0 0# =
  { mutable taunit_durationB__content "model_trace:" : taunit_durationB }
 
 function taunit_durationB__ref___projection #"aunit-time_measure.ads" 70 0 0# 
   (a : taunit_durationB__ref) : taunit_durationB =
  a.taunit_durationB__content
 
 meta "model_projection" function taunit_durationB__ref___projection
 
 meta "inline : no" function taunit_durationB__ref___projection
 
 val taunit_durationB__havoc #"aunit-time_measure.ads" 70 0 0# 
   (x : taunit_durationB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "aunit_duration" defined at aunit-time_measure.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Aunit__time_measure__aunit_duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type aunit_duration #"aunit-time_measure.ads" 70 0 0# 
 
 function inv_small #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"aunit-time_measure.ads" 70 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = aunit_duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type aunit_duration__ref #"aunit-time_measure.ads" 70 0 0# =
  { mutable aunit_duration__content "model_trace:" : aunit_duration }
 
 function aunit_duration__ref___projection #"aunit-time_measure.ads" 70 0 0# 
   (a : aunit_duration__ref) : aunit_duration =
  a.aunit_duration__content
 
 meta "model_projection" function aunit_duration__ref___projection
 
 meta "inline : no" function aunit_duration__ref___projection
 
 val aunit_duration__havoc #"aunit-time_measure.ads" 70 0 0# 
   (x : aunit_duration__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_time" defined at aunit-time_measure.ads:43, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__time_measure__null_time
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function null_time #"aunit-time_measure.ads" 43 0 0# "model_projected" "model_trace:5024" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module for defining the constant "t" defined at aunit-time_measure.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__time_measure__get_measure__t
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function t #"aunit-time_measure.ads" 52 0 0# "model_projected" "model_trace:5099" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-time_measure.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__time_measure__get_measure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_measure" defined at aunit-time_measure.ads:52, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__time_measure__get_measure
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__aunit_duration

 function get_measure #"aunit-time_measure.ads" 52 0 0# 
   (t : Aunit__time_measure__time.time) : Aunit__time_measure__aunit_duration.aunit_duration

end

(* Module for axiomatizing type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__result_lists__list
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-time_measure.ads" 70 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_6__projection #"aunit-time_measure.ads" 70 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_6__projection
 
 meta "inline : no" function __split_fields_6__projection
 
 function __split_fields_7__projection #"aunit-time_measure.ads" 70 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_7__projection
 
 meta "inline : no" function __split_fields_7__projection
 
 type __split_fields__ref #"aunit-time_measure.ads" 70 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_6__projection #"aunit-time_measure.ads" 70 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_6__projection
 
 meta "inline : no" function __split_fields__ref_6__projection
 
 val __split_fields__havoc #"aunit-time_measure.ads" 70 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list #"ada_containers-aunit_lists.ads" 51 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function list___projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list___projection
 
 meta "inline : no" function list___projection
 
 function list_2__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int =
  a.attr__tag
 
 meta "model_projection" function list_2__projection
 
 meta "inline : no" function list_2__projection
 
 function user_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __dispatch_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __tag #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function value__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 51 0 0# 
   : list
 
 type list__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable list__content "model_trace:" : list }
 
 function list__ref___projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list__ref) : list =
  a.list__content
 
 meta "model_projection" function list__ref___projection
 
 meta "inline : no" function list__ref___projection
 
 val list__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : list__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "result" defined at aunit-test_results.ads:140, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__result
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Ada_containers__count_type
 use        Aunit__time_measure__time
 use        Aunit__test_results__result_lists__list

 type __split_fields #"ada_containers-aunit_lists.ads" 51 0 0# =
  { rec__tests_run "model_trace:.3496" : Ada_containers__count_type.count_type; rec__result_list "model_trace:.3507" : Aunit__test_results__result_lists__list.list; rec__elapsed_time "model_trace:.3519" : Aunit__time_measure__time.time; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_Tests_Run__projection #"aunit-time_measure.ads" 36 0 0# "model_trace:.3496" 
   (a : __split_fields) : Ada_containers__count_type.count_type =
  a.rec__tests_run
 
 meta "model_projection" function __split_fields_Tests_Run__projection
 
 meta "inline : no" function __split_fields_Tests_Run__projection
 
 function __split_fields_Result_List__projection #"aunit-test_results.ads" 140 0 0# "model_trace:.3507" 
   (a : __split_fields) : Aunit__test_results__result_lists__list.list =
  a.rec__result_list
 
 meta "model_projection" function __split_fields_Result_List__projection
 
 meta "inline : no" function __split_fields_Result_List__projection
 
 function __split_fields_Elapsed_Time__projection #"aunit-test_results.ads" 140 0 0# "model_trace:.3519" 
   (a : __split_fields) : Aunit__time_measure__time.time =
  a.rec__elapsed_time
 
 meta "model_projection" function __split_fields_Elapsed_Time__projection
 
 meta "inline : no" function __split_fields_Elapsed_Time__projection
 
 function __split_fields_8__projection #"aunit-test_results.ads" 140 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_8__projection
 
 meta "inline : no" function __split_fields_8__projection
 
 type __split_fields__ref #"aunit-test_results.ads" 140 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_7__projection #"aunit-test_results.ads" 140 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_7__projection
 
 meta "inline : no" function __split_fields__ref_7__projection
 
 val __split_fields__havoc #"aunit-test_results.ads" 140 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type result__ #"aunit-test_results.ads" 140 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function result_____projection #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function result_____projection
 
 meta "inline : no" function result_____projection
 
 function result___2__projection #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : int =
  a.attr__tag
 
 meta "model_projection" function result___2__projection
 
 meta "inline : no" function result___2__projection
 
 predicate tests_run__pred #"aunit-test_results.ads" 140 0 0# 
   (a : result__)  =
  true
 
 val rec__tests_run_ #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : Ada_containers__count_type.count_type
  requires { (tests_run__pred a) }
  ensures { (result = a.__split_fields.rec__tests_run) }
 
 predicate result_list__pred #"aunit-test_results.ads" 140 0 0# 
   (a : result__)  =
  true
 
 val rec__result_list_ #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : Aunit__test_results__result_lists__list.list
  requires { (result_list__pred a) }
  ensures { (result = a.__split_fields.rec__result_list) }
 
 predicate elapsed_time__pred #"aunit-test_results.ads" 140 0 0# 
   (a : result__)  =
  true
 
 val rec__elapsed_time_ #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : Aunit__time_measure__time.time
  requires { (elapsed_time__pred a) }
  ensures { (result = a.__split_fields.rec__elapsed_time) }
 
 function user_eq #"aunit-test_results.ads" 140 0 0# 
   (a : result__) (b : result__) : bool
 
 function __dispatch_eq #"aunit-test_results.ads" 140 0 0# 
   (a : result__) (b : result__) : bool
 
 function __tag #"aunit-test_results.ads" 140 0 0# 
   : int
 
 function value__size #"aunit-test_results.ads" 140 0 0# 
   : int
 
 function object__size #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : result__.
   ((object__size a) >= 0))
 
 function dummy #"aunit-test_results.ads" 140 0 0# 
   : result__
 
 type result____ref #"aunit-test_results.ads" 140 0 0# =
  { mutable result____content "model_trace:" : result__ }
 
 function result____ref___projection #"aunit-test_results.ads" 140 0 0# 
   (a : result____ref) : result__ =
  a.result____content
 
 meta "model_projection" function result____ref___projection
 
 meta "inline : no" function result____ref___projection
 
 val result____havoc #"aunit-test_results.ads" 140 0 0# 
   (x : result____ref) : unit
  writes {x}

end

(* Module for axiomatizing type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__result_lists__cursor
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-test_results.ads" 140 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_9__projection #"aunit-test_results.ads" 140 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_9__projection
 
 meta "inline : no" function __split_fields_9__projection
 
 type __split_fields__ref #"aunit-test_results.ads" 140 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_8__projection #"aunit-test_results.ads" 140 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_8__projection
 
 meta "inline : no" function __split_fields__ref_8__projection
 
 val __split_fields__havoc #"aunit-test_results.ads" 140 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type cursor #"ada_containers-aunit_lists.ads" 53 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function cursor___projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function cursor___projection
 
 meta "inline : no" function cursor___projection
 
 function bool_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool
 
 function value__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : cursor.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 53 0 0# 
   : cursor
 
 type cursor__ref #"ada_containers-aunit_lists.ads" 53 0 0# =
  { mutable cursor__content "model_trace:" : cursor }
 
 function cursor__ref___projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor__ref) : cursor =
  a.cursor__content
 
 meta "model_projection" function cursor__ref___projection
 
 meta "inline : no" function cursor__ref___projection
 
 val cursor__havoc #"ada_containers-aunit_lists.ads" 53 0 0# 
   (x : cursor__ref) : unit
  writes {x}

end

(* Module for defining the constant "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__no_element
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function no_element #"ada_containers-aunit_lists.ads" 57 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__no_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__Oeq__2__left
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function left #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:8950" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__Oeq__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__Oeq__2__right
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function right #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:8959" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__Oeq__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__Oeq__2
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_results__result_lists__list.list) (right : Aunit__test_results__result_lists__list.list) : bool
 
 namespace Dispatch
  function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_results__result_lists__list.list) (right : Aunit__test_results__result_lists__list.list) : bool

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__length__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 61 0 0# "model_projected" "model_trace:8978" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__length__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__length
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : int
 
 namespace Dispatch
  function length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : int

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__is_empty__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 63 0 0# "model_projected" "model_trace:8997" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__is_empty__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__is_empty
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : bool
 
 namespace Dispatch
  function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : bool

 end

end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 67 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__replace_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 71 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__replace_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 89 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 91 0 0# "model" "model_trace:9143" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 95 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__2__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 98 0 0# "model" "model_trace:9198" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 102 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__3__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 104 0 0# "model" "model_trace:9244" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__3__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__prepend__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 109 0 0# "model" "model_trace:9281" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__prepend__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__append__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 114 0 0# "model" "model_trace:9318" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__append__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__delete__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 119 0 0# "model" "model_trace:9355" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__delete_first__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 123 0 0# "model" "model_trace:9383" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete_first__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__delete_last__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 127 0 0# "model" "model_trace:9411" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete_last__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__swap__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__swap__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__swap_links__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap_links__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__swap_links__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap_links__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__splice__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 141 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__splice__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 146 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__splice__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 152 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__splice__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 153 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 155 0 0# "model_projected" "model_trace:9637" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__first
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__cursor

 function first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
 
 namespace Dispatch
  function first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__first_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 157 0 0# "model_projected" "model_trace:9656" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__first_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 159 0 0# "model_projected" "model_trace:9675" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__last
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__cursor

 function last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
 
 namespace Dispatch
  function last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__last_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 161 0 0# "model_projected" "model_trace:9694" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__last_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__next__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 163 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__next__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__previous__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 167 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__previous__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 172 0 0# "model_projected" "model_trace:9787" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 174 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__reverse_find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 177 0 0# "model_projected" "model_trace:9825" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__reverse_find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__reverse_find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 179 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__reverse_find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__contains__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 182 0 0# "model_projected" "model_trace:9863" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__contains__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__has_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 185 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__has_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__iterate__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 190 0 0# "model_projected" "model_trace:9928" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__iterate__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__result_lists__TlistC
 use export Aunit__test_results__result_lists__list
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "elapsed" defined at aunit-test_results.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__add_error__elapsed
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function elapsed #"aunit-test_results.ads" 81 0 0# "model_projected" "model_trace:3093" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "elapsed" defined at aunit-test_results.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_error__elapsed__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "elapsed" defined at aunit-test_results.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__add_failure__elapsed
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function elapsed #"aunit-test_results.ads" 89 0 0# "model_projected" "model_trace:3147" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "elapsed" defined at aunit-test_results.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_failure__elapsed__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "elapsed" defined at aunit-test_results.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__add_success__elapsed
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function elapsed #"aunit-test_results.ads" 96 0 0# "model_projected" "model_trace:3192" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "elapsed" defined at aunit-test_results.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_success__elapsed__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "t" defined at aunit-test_results.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__set_elapsed__t
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function t #"aunit-test_results.ads" 99 0 0# "model_projected" "model_trace:3219" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-test_results.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__set_elapsed__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__error_count__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 102 0 0# "model_projected" "model_trace:3237" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__error_count__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__failure_count__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 109 0 0# "model_projected" "model_trace:3285" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__failure_count__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__elapsed__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 115 0 0# "model_projected" "model_trace:3333" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__elapsed__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "elapsed" defined at aunit-test_results.ads:115, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__elapsed
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__test_results__result

 function elapsed #"aunit-test_results.ads" 115 0 0# 
   (r : Aunit__test_results__result.result__) : Aunit__time_measure__time.time
 
 namespace Dispatch
  function elapsed #"aunit-test_results.ads" 115 0 0# 
    (r : Aunit__test_results__result.result__) : Aunit__time_measure__time.time

 end

end

(* Module for defining the constant "subtest_count" defined at aunit-test_results.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__start_test__subtest_count
 use import "_gnatprove_standard".Main

 function subtest_count #"aunit-test_results.ads" 118 0 0# "model" "model_trace:3361" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "subtest_count" defined at aunit-test_results.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__start_test__subtest_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__success_count__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 121 0 0# "model_projected" "model_trace:3379" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__success_count__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__successful__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 127 0 0# "model_projected" "model_trace:3427" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__successful__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__test_count__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 130 0 0# "model_projected" "model_trace:3446" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__test_count__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "test_count" defined at aunit-test_results.ads:130, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__test_count
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function test_count #"aunit-test_results.ads" 130 0 0# 
   (r : Aunit__test_results__result.result__) : int
 
 namespace Dispatch
  function test_count #"aunit-test_results.ads" 130 0 0# 
    (r : Aunit__test_results__result.result__) : int

 end

end

(* Module for axiomatizing type "TresultC" defined at aunit-test_results.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__TresultC
 use export Aunit__test_results__result
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name #"system.ads" 46 0 0# 
 
 function first #"system.ads" 46 0 0# 
   : int =
  0
 
 function last #"system.ads" 46 0 0# 
   : int =
  0
 
 predicate in_range #"system.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type name__ref #"system.ads" 46 0 0# =
  { mutable name__content "model_trace:" : name }
 
 function name__ref___projection #"system.ads" 46 0 0# 
   (a : name__ref) : name =
  a.name__content
 
 meta "model_projection" function name__ref___projection
 
 meta "inline : no" function name__ref___projection
 
 val name__havoc #"system.ads" 46 0 0# 
   (x : name__ref) : unit
  writes {x}

end

(* Module for defining the constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main

 function system_name #"system.ads" 47 0 0# "model" "model_trace:10643" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 46 0 0# 
   : int

end

(* Module for axiomatizing type "address" defined at system.ads:108, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type address #"system.ads" 108 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"system.ads" 108 0 0# 
   : BV32.t
 
 function first #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"system.ads" 108 0 0# 
   : int =
  0
 
 function last_int #"system.ads" 108 0 0# 
   : int =
  4294967295
 
 predicate in_range #"system.ads" 108 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"system.ads" 108 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type address__ref #"system.ads" 108 0 0# =
  { mutable address__content "model_trace:" : address }
 
 function address__ref___projection #"system.ads" 108 0 0# 
   (a : address__ref) : address =
  a.address__content
 
 meta "model_projection" function address__ref___projection
 
 meta "inline : no" function address__ref___projection
 
 val address__havoc #"system.ads" 108 0 0# 
   (x : address__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_address" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_address #"system.ads" 69 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 77 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 77 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 78 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 78 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 79 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 79 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 80 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 80 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 81 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 81 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for axiomatizing type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bit_order #"system.ads" 91 0 0# 
 
 function first #"system.ads" 91 0 0# 
   : int =
  0
 
 function last #"system.ads" 91 0 0# 
   : int =
  1
 
 predicate in_range #"system.ads" 91 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bit_order__ref #"system.ads" 91 0 0# =
  { mutable bit_order__content "model_trace:" : bit_order }
 
 function bit_order__ref___projection #"system.ads" 91 0 0# 
   (a : bit_order__ref) : bit_order =
  a.bit_order__content
 
 meta "model_projection" function bit_order__ref___projection
 
 meta "inline : no" function bit_order__ref___projection
 
 val bit_order__havoc #"system.ads" 91 0 0# 
   (x : bit_order__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main

 function default_bit_order #"system.ads" 92 0 0# "model" "model_trace:10992" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 91 0 0# 
   : int

end

(* Module for defining the constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main

 function max_priority #"system.ads" 97 0 0# "model" "model_trace:11008" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main

 function max_interrupt_priority #"system.ads" 98 0 0# "model" "model_trace:11018" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type any_priority #"system.ads" 100 0 0# 
 
 function first #"system.ads" 100 0 0# 
   : int =
  0
 
 function last #"system.ads" 100 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 100 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type any_priority__ref #"system.ads" 100 0 0# =
  { mutable any_priority__content "model_trace:" : any_priority }
 
 function any_priority__ref___projection #"system.ads" 100 0 0# 
   (a : any_priority__ref) : any_priority =
  a.any_priority__content
 
 meta "model_projection" function any_priority__ref___projection
 
 meta "inline : no" function any_priority__ref___projection
 
 val any_priority__havoc #"system.ads" 100 0 0# 
   (x : any_priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priority" defined at system.ads:101, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type priority #"system.ads" 101 0 0# 
 
 function first #"system.ads" 101 0 0# 
   : int =
  0
 
 function last #"system.ads" 101 0 0# 
   : int =
  30
 
 predicate in_range #"system.ads" 101 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type priority__ref #"system.ads" 101 0 0# =
  { mutable priority__content "model_trace:" : priority }
 
 function priority__ref___projection #"system.ads" 101 0 0# 
   (a : priority__ref) : priority =
  a.priority__content
 
 meta "model_projection" function priority__ref___projection
 
 meta "inline : no" function priority__ref___projection
 
 val priority__havoc #"system.ads" 101 0 0# 
   (x : priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type interrupt_priority #"system.ads" 102 0 0# 
 
 function first #"system.ads" 102 0 0# 
   : int =
  31
 
 function last #"system.ads" 102 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 102 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type interrupt_priority__ref #"system.ads" 102 0 0# =
  { mutable interrupt_priority__content "model_trace:" : interrupt_priority }
 
 function interrupt_priority__ref___projection #"system.ads" 102 0 0# 
   (a : interrupt_priority__ref) : interrupt_priority =
  a.interrupt_priority__content
 
 meta "model_projection" function interrupt_priority__ref___projection
 
 meta "inline : no" function interrupt_priority__ref___projection
 
 val interrupt_priority__havoc #"system.ads" 102 0 0# 
   (x : interrupt_priority__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main

 function default_priority #"system.ads" 104 0 0# "model" "model_trace:11070" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 101 0 0# 
   : int

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main

 function backend_divide_checks #"system.ads" 121 0 0# "model" "model_trace:11100" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 121 0 0# 
   : int

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main

 function backend_overflow_checks #"system.ads" 122 0 0# "model" "model_trace:11110" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 122 0 0# 
   : int

end

(* Module for defining the constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main

 function command_line_args #"system.ads" 123 0 0# "model" "model_trace:11120" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 123 0 0# 
   : int

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main

 function configurable_run_time #"system.ads" 124 0 0# "model" "model_trace:11130" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module for defining the constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main

 function denorm #"system.ads" 125 0 0# "model" "model_trace:11140" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 125 0 0# 
   : int

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main

 function duration_32_bits #"system.ads" 126 0 0# "model" "model_trace:11150" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 126 0 0# 
   : int

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main

 function exit_status_supported #"system.ads" 127 0 0# "model" "model_trace:11160" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 127 0 0# 
   : int

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main

 function fractional_fixed_ops #"system.ads" 128 0 0# "model" "model_trace:11170" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 128 0 0# 
   : int

end

(* Module for defining the constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main

 function frontend_layout #"system.ads" 129 0 0# "model" "model_trace:11180" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 129 0 0# 
   : int

end

(* Module for defining the constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main

 function machine_overflows #"system.ads" 130 0 0# "model" "model_trace:11190" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 130 0 0# 
   : int

end

(* Module for defining the constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main

 function machine_rounds #"system.ads" 131 0 0# "model" "model_trace:11200" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 131 0 0# 
   : int

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main

 function preallocated_stacks #"system.ads" 132 0 0# "model" "model_trace:11210" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 132 0 0# 
   : int

end

(* Module for defining the constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main

 function signed_zeros #"system.ads" 133 0 0# "model" "model_trace:11220" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 133 0 0# 
   : int

end

(* Module for defining the constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main

 function stack_check_default #"system.ads" 134 0 0# "model" "model_trace:11230" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main

 function stack_check_probes #"system.ads" 135 0 0# "model" "model_trace:11240" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 135 0 0# 
   : int

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main

 function stack_check_limits #"system.ads" 136 0 0# "model" "model_trace:11250" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 136 0 0# 
   : int

end

(* Module for defining the constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main

 function support_aggregates #"system.ads" 137 0 0# "model" "model_trace:11260" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 137 0 0# 
   : int

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main

 function support_atomic_primitives #"system.ads" 138 0 0# "model" "model_trace:11270" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 138 0 0# 
   : int

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main

 function support_composite_assign #"system.ads" 139 0 0# "model" "model_trace:11280" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 139 0 0# 
   : int

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main

 function support_composite_compare #"system.ads" 140 0 0# "model" "model_trace:11290" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 140 0 0# 
   : int

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main

 function support_long_shifts #"system.ads" 141 0 0# "model" "model_trace:11300" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 141 0 0# 
   : int

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main

 function always_compatible_rep #"system.ads" 142 0 0# "model" "model_trace:11310" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 142 0 0# 
   : int

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main

 function suppress_standard_library #"system.ads" 143 0 0# "model" "model_trace:11320" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 143 0 0# 
   : int

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main

 function use_ada_main_program_name #"system.ads" 144 0 0# "model" "model_trace:11330" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 144 0 0# 
   : int

end

(* Module for defining the constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_exceptions
 use import "_gnatprove_standard".Main

 function frontend_exceptions #"system.ads" 145 0 0# "model" "model_trace:11340" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 145 0 0# 
   : int

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main

 function zcx_by_default #"system.ads" 146 0 0# "model" "model_trace:11350" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 146 0 0# 
   : int

end

(* Module for axiomatizing the array theory associated to type "Tpriorities_mappingB" defined at system.ads:161, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 function index_I1_one #"system.ads" 146 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 146 0 0# =
  Standard__integer.integer
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__integer.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__Tpriorities_mappingB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer
 use        System__any_priority
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 1 0 0# =
  Standard__integer.integer
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = System__any_priority.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tpriorities_mappingB #"system.ads" 161 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tpriorities_mappingB__ref #"system.ads" 161 0 0# =
  { mutable tpriorities_mappingB__content "model_trace:" : tpriorities_mappingB }
 
 function tpriorities_mappingB__ref___projection #"system.ads" 161 0 0# 
   (a : tpriorities_mappingB__ref) : tpriorities_mappingB =
  a.tpriorities_mappingB__content
 
 meta "model_projection" function tpriorities_mappingB__ref___projection
 
 meta "inline : no" function tpriorities_mappingB__ref___projection
 
 val tpriorities_mappingB__havoc #"system.ads" 161 0 0# 
   (x : tpriorities_mappingB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__priorities_mapping
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 161 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"system.ads" 166 0 0# 
 
 function first #"system.ads" 166 0 0# 
   : int =
  0
 
 function last #"system.ads" 166 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 166 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t3s__ref #"system.ads" 166 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref___projection #"system.ads" 166 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref___projection
 
 meta "inline : no" function t3s__ref___projection
 
 val t3s__havoc #"system.ads" 166 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 166 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__underlying_priorities
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer

 function underlying_priorities #"system.ads" 165 0 0# "model_projected" "model_trace:11376" 
   : Array__Int__Standard__integer.map
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 161 0 0# 
   : int

end

(* Module for axiomatizing type "reporter" defined at aunit-reporter.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Aunit__reporter__reporter
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"system.ads" 161 0 0# =
  { rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_10__projection #"system.ads" 161 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_10__projection
 
 meta "inline : no" function __split_fields_10__projection
 
 type __split_fields__ref #"system.ads" 161 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_9__projection #"system.ads" 161 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_9__projection
 
 meta "inline : no" function __split_fields__ref_9__projection
 
 val __split_fields__havoc #"system.ads" 161 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type reporter #"aunit-reporter.ads" 37 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function reporter___projection #"aunit-reporter.ads" 37 0 0# 
   (a : reporter) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function reporter___projection
 
 meta "inline : no" function reporter___projection
 
 function reporter_2__projection #"aunit-reporter.ads" 37 0 0# 
   (a : reporter) : int =
  a.attr__tag
 
 meta "model_projection" function reporter_2__projection
 
 meta "inline : no" function reporter_2__projection
 
 function bool_eq #"aunit-reporter.ads" 37 0 0# 
   (a : reporter) (b : reporter) : bool =
  (if (true) then (
   True) else (
   False))
 
 function user_eq #"aunit-reporter.ads" 37 0 0# 
   (a : reporter) (b : reporter) : bool
 
 function __dispatch_eq #"aunit-reporter.ads" 37 0 0# 
   (a : reporter) (b : reporter) : bool
 
 function __tag #"aunit-reporter.ads" 37 0 0# 
   : int
 
 function value__size #"aunit-reporter.ads" 37 0 0# 
   : int
 
 function object__size #"aunit-reporter.ads" 37 0 0# 
   (a : reporter) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : reporter.
   ((object__size a) >= 0))
 
 function dummy #"aunit-reporter.ads" 37 0 0# 
   : reporter
 
 type reporter__ref #"aunit-reporter.ads" 37 0 0# =
  { mutable reporter__content "model_trace:" : reporter }
 
 function reporter__ref___projection #"aunit-reporter.ads" 37 0 0# 
   (a : reporter__ref) : reporter =
  a.reporter__content
 
 meta "model_projection" function reporter__ref___projection
 
 meta "inline : no" function reporter__ref___projection
 
 val reporter__havoc #"aunit-reporter.ads" 37 0 0# 
   (x : reporter__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TreporterC" defined at aunit-reporter.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Aunit__reporter__TreporterC
 use export Aunit__reporter__reporter
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "engine" defined at aunit-reporter.ads:40, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__reporter__report__engine
 use import "_gnatprove_standard".Main
 use        Aunit__reporter__reporter

 function engine #"aunit-reporter.ads" 40 0 0# "model_projected" "model_trace:2338" 
   : Aunit__reporter__reporter.reporter
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-reporter.ads" 37 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "engine" defined at aunit-reporter.ads:40, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__reporter__report__engine__axiom
 use import "_gnatprove_standard".Main


end
(* Module for defining a ref holding the value of variable "msg" defined at aunit.ads:46, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__message_free__msg
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val msg #"aunit.ads" 46 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit.ads" 46 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "msg" defined at aunit.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__message_free__msg__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "filter" defined at aunit-test_filters.ads:52, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_filters__set_name__filter
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__name_filter

 val filter__split_fields #"aunit-test_filters.ads" 52 0 0# "model_projected" "model_trace:2683"  : Aunit__test_filters__name_filter.__split_fields__ref 
 
 function filter__attr__tag #"aunit-test_filters.ads" 52 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_filters.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filter" defined at aunit-test_filters.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__set_name__filter__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of abstract state "clock_time" defined at a-calend.ads:38, created in Gnat2Why.Decls.Translate_Abstract_State *)
module Ada__calendar__clock_time
 use import "_gnatprove_standard".Main

 val clock_time #"a-calend.ads" 38 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "clock_time" defined at a-calend.ads:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__clock_time__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "year" defined at a-calend.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__year
 use import "_gnatprove_standard".Main

 val year #"a-calend.ads" 73 0 0# "model" "model_trace:5455"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "year" defined at a-calend.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__year__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "month" defined at a-calend.ads:74, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__month
 use import "_gnatprove_standard".Main

 val month #"a-calend.ads" 74 0 0# "model" "model_trace:5464"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "month" defined at a-calend.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__month__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "day" defined at a-calend.ads:75, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__day
 use import "_gnatprove_standard".Main

 val day #"a-calend.ads" 75 0 0# "model" "model_trace:5473"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "day" defined at a-calend.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__day__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "seconds" defined at a-calend.ads:76, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 val seconds #"a-calend.ads" 76 0 0# "model_projected" "model_trace:5482"  : Ada__calendar__day_duration.day_duration__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "seconds" defined at a-calend.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__seconds__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at aunit-time_measure.ads:46, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__time_measure__start_measure__t
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 val t__split_fields #"aunit-time_measure.ads" 46 0 0# "model_projected" "model_trace:5063"  : Aunit__time_measure__time.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-time_measure.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__time_measure__start_measure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at aunit-time_measure.ads:49, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__time_measure__stop_measure__t
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 val t__split_fields #"aunit-time_measure.ads" 49 0 0# "model_projected" "model_trace:5081"  : Aunit__time_measure__time.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-time_measure.ads:49, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__time_measure__stop_measure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__clear__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 65 0 0# "model_projected" "model_trace:9016"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__clear__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__replace_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 70 0 0# "model_projected" "model_trace:9053"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__replace_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__move__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 84 0 0# "model_projected" "model_trace:9089"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__move__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__move__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 85 0 0# "model_projected" "model_trace:9098"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__move__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 88 0 0# "model_projected" "model_trace:9116"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__2__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 94 0 0# "model_projected" "model_trace:9162"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__2__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 97 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 101 0 0# "model_projected" "model_trace:9217"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 103 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__prepend__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 107 0 0# "model_projected" "model_trace:9263"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__prepend__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__append__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 112 0 0# "model_projected" "model_trace:9300"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__append__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__delete__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 117 0 0# "model_projected" "model_trace:9337"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__delete__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 118 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__delete_first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 122 0 0# "model_projected" "model_trace:9374"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete_first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__delete_last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 126 0 0# "model_projected" "model_trace:9402"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete_last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__reverse_elements__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 129 0 0# "model_projected" "model_trace:9430"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__reverse_elements__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__swap__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 132 0 0# "model_projected" "model_trace:9448"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__swap_links__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 136 0 0# "model_projected" "model_trace:9484"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap_links__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 140 0 0# "model_projected" "model_trace:9520"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 142 0 0# "model_projected" "model_trace:9538"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__2__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 145 0 0# "model_projected" "model_trace:9556"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__2__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__2__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 147 0 0# "model_projected" "model_trace:9574"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 148 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 151 0 0# "model_projected" "model_trace:9601"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__next__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 165 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__next__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__previous__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 169 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__previous__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:77, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__add_error__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 77 0 0# "model_projected" "model_trace:3057"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 77 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_error__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:85, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__add_failure__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 85 0 0# "model_projected" "model_trace:3111"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 85 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 85 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_failure__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:93, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__add_success__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 93 0 0# "model_projected" "model_trace:3165"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 93 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 93 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_success__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:99, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__set_elapsed__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 99 0 0# "model_projected" "model_trace:3210"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 99 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__set_elapsed__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:105, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__errors__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 105 0 0# "model_projected" "model_trace:3256"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 105 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__errors__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "e" defined at aunit-test_results.ads:106, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__errors__e
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val e__split_fields #"aunit-test_results.ads" 106 0 0# "model_projected" "model_trace:3265"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function e__attr__tag #"aunit-test_results.ads" 106 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 106 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at aunit-test_results.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__errors__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__failures__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 112 0 0# "model_projected" "model_trace:3304"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__failures__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "f" defined at aunit-test_results.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__failures__f
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val f__split_fields #"aunit-test_results.ads" 112 0 0# "model_projected" "model_trace:3313"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function f__attr__tag #"aunit-test_results.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "f" defined at aunit-test_results.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__failures__f__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:118, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__start_test__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 118 0 0# "model_projected" "model_trace:3352"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 118 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 118 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__start_test__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:124, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__successes__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 124 0 0# "model_projected" "model_trace:3398"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 124 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__successes__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "s" defined at aunit-test_results.ads:124, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__successes__s
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val s__split_fields #"aunit-test_results.ads" 124 0 0# "model_projected" "model_trace:3407"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function s__attr__tag #"aunit-test_results.ads" 124 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at aunit-test_results.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__successes__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:133, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__clear__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 133 0 0# "model_projected" "model_trace:3467"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 133 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 133 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__clear__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-reporter.ads:41, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__reporter__report__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-reporter.ads" 41 0 0# "model_projected" "model_trace:2347"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-reporter.ads" 41 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-reporter.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-reporter.ads:41, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__reporter__report__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__h," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__h
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val h #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__h", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__h__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__m," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__m
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val m #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__m", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__m__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__s," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__s
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val s #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__s", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__t," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__t
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val t #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__t", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__force," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__force
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val force #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__force", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__force__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure_in_seconds__s," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure_in_seconds__s
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val s #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure_in_seconds__s", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure_in_seconds__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure_in_seconds__t," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure_in_seconds__t
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val t #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure_in_seconds__t", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure_in_seconds__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__new_node_type__2__res," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__new_node_type__2__res
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val res #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__new_node_type__2__res", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__new_node_type__2__res__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert_internal__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert_internal__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert_internal__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert_internal__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__is_sorted__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__is_sorted__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__is_sorted__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__is_sorted__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__merge__li," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__li
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val li #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__merge__li", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__li__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__merge__ri," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__ri
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ri #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__merge__ri", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__ri__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__merge__B_9__rj," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__B_9__rj
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rj #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__merge__B_9__rj", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__B_9__rj__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__sort__partition__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__sort__partition__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__sort__sort__pivot," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__sort__pivot
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val pivot #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__sort__sort__pivot", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__sort__pivot__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__swap__ln," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__ln
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ln #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__swap__ln", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__ln__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__swap__lp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__lp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val lp #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__swap__lp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__lp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__swap__rn," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__rn
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rn #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__swap__rn", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__rn__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__swap__rp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__rp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rp #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__swap__rp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__rp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__e_count," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__e_count
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val e_count #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__e_count", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__e_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__f_count," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__f_count
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val f_count #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__f_count", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__f_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__s_count," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__s_count
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val s_count #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__s_count", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__s_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__format__ptr," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__format__ptr
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ptr #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__format__ptr", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__format__ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__message_alloc__ret," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__message_alloc__ret
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ret #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__message_alloc__ret", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__message_alloc__ret__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__Oeq__2__l," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__Oeq__2__l
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val l #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__Oeq__2__l", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__Oeq__2__l__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__Oeq__2__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__Oeq__2__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__Oeq__2__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__Oeq__2__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__clear__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__clear__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__clear__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__clear__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__new_node_type__2__res," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__new_node_type__2__res
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val res #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__new_node_type__2__res", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__new_node_type__2__res__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__insert_internal__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert_internal__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__insert_internal__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert_internal__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__insert__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__insert__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__insert__2__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__2__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__insert__2__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__2__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__is_sorted__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__is_sorted__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__is_sorted__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__is_sorted__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__insert__3__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__3__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__insert__3__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__3__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__merge__li," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__li
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val li #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__merge__li", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__li__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__merge__ri," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__ri
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ri #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__merge__ri", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__ri__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__merge__B_9__rj," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__B_9__rj
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rj #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__merge__B_9__rj", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__B_9__rj__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__sort__partition__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__sort__partition__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__delete__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__delete__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__sort__sort__pivot," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__sort__pivot
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val pivot #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__sort__sort__pivot", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__sort__pivot__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__delete_first__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete_first__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__delete_first__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete_first__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__swap__ln," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__ln
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ln #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__swap__ln", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__ln__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__swap__lp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__lp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val lp #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__swap__lp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__lp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__swap__rn," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__rn
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rn #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__swap__rn", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__rn__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__swap__rp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__rp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rp #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__swap__rp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__rp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__delete_last__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete_last__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__delete_last__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete_last__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__i," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__i
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__i", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__j," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__j
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__j", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__swap__B_20__ei_copy," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap__B_20__ei_copy
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ei_copy #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__swap__B_20__ei_copy", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap__B_20__ei_copy__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__swap_links__B_21__i_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap_links__B_21__i_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i_next #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__swap_links__B_21__i_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap_links__B_21__i_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__swap_links__B_21__B_22__j_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap_links__B_21__B_22__j_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j_next #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__swap_links__B_21__B_22__j_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap_links__B_21__B_22__j_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__gen_extract__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__gen_extract__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__gen_extract__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__gen_extract__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__gen_extract__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__gen_extract__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__gen_extract__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__gen_extract__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__next__B_16__next_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__next__B_16__next_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next_node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__next__B_16__next_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__next__B_16__next_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__errors__extractGP8143__extractR__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__errors__extractGP8143__extractR__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__errors__extractGP8143__extractR__e," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__e
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val e #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__errors__extractGP8143__extractR__e", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__errors__extractGP8143__extractR__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__errors__extractGP8143__extractR__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__errors__extractGP8143__extractR__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__errors__extractGP8143__extractR__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__previous__B_17__prev_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__previous__B_17__prev_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev_node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__previous__B_17__prev_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__previous__B_17__prev_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__failures__extractGP8681__extractR__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__failures__extractGP8681__extractR__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__failures__extractGP8681__extractR__e," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__e
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val e #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__failures__extractGP8681__extractR__e", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__failures__extractGP8681__extractR__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__failures__extractGP8681__extractR__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__failures__extractGP8681__extractR__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__failures__extractGP8681__extractR__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__successes__extractGP9601__extractR__e," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__e
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val e #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__successes__extractGP9601__extractR__e", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__successes__extractGP9601__extractR__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__successes__extractGP9601__extractR__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__successes__extractGP9601__extractR__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__successes__extractGP9601__extractR__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__successes__extractGP9601__extractR__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__successes__extractGP9601__extractR__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__iterate__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__iterate__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__iterate__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__iterate__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__add_error__val," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_error__val
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val val__ #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__add_error__val", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_error__val__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__add_failure__val," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_failure__val
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val val__ #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__add_failure__val", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_failure__val__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__add_success__val," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_success__val
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val val__ #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__add_success__val", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_success__val__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failures," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failures
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val failures #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failures", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failures__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__current_id," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__current_id
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val current_id #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__current_id", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__current_id__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__the_current_test," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__the_current_test
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val the_current_test #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__the_current_test", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__the_current_test__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__init_test__t," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__init_test__t
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val t #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__init_test__t", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__init_test__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__clear_failures__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__clear_failures__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__clear_failures__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__clear_failures__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__clear_failures__n," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__clear_failures__n
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val n #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__clear_failures__n", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__clear_failures__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__first_failure__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__first_failure__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__first_failure__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__first_failure__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__next__i," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__next__i
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__next__i", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__next__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__next__id," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__next__id
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val id #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__next__id", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__next__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__copy_id__to," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__copy_id__to
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val to__ #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__copy_id__to", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__copy_id__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__no_element," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__no_element
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val no_element #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__no_element", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__no_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__Oeq__2__l," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__Oeq__2__l
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val l #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__Oeq__2__l", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__Oeq__2__l__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__Oeq__2__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__Oeq__2__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__Oeq__2__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__Oeq__2__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__clear__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__clear__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__clear__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__clear__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__clear__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__clear__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__clear__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__clear__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__replace_element__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__replace_element__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__replace_element__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__replace_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__move__target," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__move__target
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val target #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__move__target", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__move__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__move__source," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__move__source
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val source #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__move__source", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__move__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__2__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__2__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__2__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__2__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__2__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__2__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__2__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__2__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__2__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__2__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__2__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__3__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__3__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__3__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__3__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__3__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__3__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__3__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__3__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__3__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__3__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__prepend__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__prepend__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__prepend__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__prepend__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__append__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__append__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__append__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__append__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete_first__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_first__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete_first__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_first__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete_first__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_first__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete_first__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete_last__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_last__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete_last__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_last__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete_last__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_last__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete_last__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__i," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__i
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__i", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__j," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__j
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__j", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__swap__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__swap__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__swap__B_20__ei_copy," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap__B_20__ei_copy
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ei_copy #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__swap__B_20__ei_copy", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap__B_20__ei_copy__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__swap_links__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__swap_links__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__swap_links__B_21__i_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__B_21__i_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i_next #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__swap_links__B_21__i_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__B_21__i_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__swap_links__B_21__B_22__j_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__B_21__B_22__j_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j_next #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__swap_links__B_21__B_22__j_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__B_21__B_22__j_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__splice__target," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__target
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val target #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__splice__target", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__splice__source," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__source
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val source #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__splice__source", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__splice__2__target," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__2__target
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val target #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__splice__2__target", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__2__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__splice__2__source," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__2__source
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val source #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__splice__2__source", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__splice__2__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__2__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__splice__2__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__splice__3__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__3__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__splice__3__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__splice__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__next__B_16__next_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__next__B_16__next_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next_node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__next__B_16__next_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__next__B_16__next_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__next__2__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__next__2__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__next__2__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__next__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__previous__B_17__prev_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__previous__B_17__prev_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev_node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__previous__B_17__prev_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__previous__B_17__prev_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__previous__2__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__previous__2__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__previous__2__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__previous__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__iterate__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__iterate__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__iterate__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__iterate__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__simple_test_cases__set_up__test," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__set_up__test
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val test #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__simple_test_cases__set_up__test", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__set_up__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__simple_test_cases__tear_down__test," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__tear_down__test
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val test #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__simple_test_cases__tear_down__test", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__tear_down__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__simple_test_cases__run__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__run__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__simple_test_cases__run__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__run__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__simple_test_cases__run__outcome," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__run__outcome
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val outcome #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__simple_test_cases__run__outcome", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__run__outcome__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__simple_test_cases__run__old," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__run__old
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val old__ #"aunit-reporter.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__simple_test_cases__run__old", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__run__old__axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant #"aunit-reporter.ads" 41 0 0# "inline" 
   (temp___expr_3 : int) (temp___is_init_0 : bool) (temp___do_constant_1 : bool) (temp___do_toplevel_2 : bool)  =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_3)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___4 : int) (temp___5 : bool)  =
  true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_9 : int) (temp___is_init_6 : bool) (temp___do_constant_7 : bool) (temp___do_toplevel_8 : bool)  =
  (if (( temp___is_init_6 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_9)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___10 : int) (temp___11 : bool)  =
  true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_15 : int) (temp___is_init_12 : bool) (temp___do_constant_13 : bool) (temp___do_toplevel_14 : bool)  =
  (if (( temp___is_init_12 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_15)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___16 : int) (temp___17 : bool)  =
  true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_21 : int) (temp___is_init_18 : bool) (temp___do_constant_19 : bool) (temp___do_toplevel_20 : bool)  =
  (if (( temp___is_init_18 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_21)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___22 : int) (temp___23 : bool)  =
  true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_27 : int) (temp___is_init_24 : bool) (temp___do_constant_25 : bool) (temp___do_toplevel_26 : bool)  =
  (if (( temp___is_init_24 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_27)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___28 : int) (temp___29 : bool)  =
  true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_33 : int) (temp___is_init_30 : bool) (temp___do_constant_31 : bool) (temp___do_toplevel_32 : bool)  =
  (if (( temp___is_init_30 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_33)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___34 : int) (temp___35 : bool)  =
  true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_39 : int) (temp___is_init_36 : bool) (temp___do_constant_37 : bool) (temp___do_toplevel_38 : bool)  =
  (if (( temp___is_init_36 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_39)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___40 : int) (temp___41 : bool)  =
  true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__short_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_45 : Standard__short_float.short_float) (temp___is_init_42 : bool) (temp___do_constant_43 : bool) (temp___do_toplevel_44 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___46 : Standard__short_float.short_float) (temp___47 : bool)  =
  true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_51 : Standard__float.float) (temp___is_init_48 : bool) (temp___do_constant_49 : bool) (temp___do_toplevel_50 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___52 : Standard__float.float) (temp___53 : bool)  =
  true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_57 : Standard__long_float.long_float) (temp___is_init_54 : bool) (temp___do_constant_55 : bool) (temp___do_toplevel_56 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___58 : Standard__long_float.long_float) (temp___59 : bool)  =
  true

end

(* Module giving axioms for type "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_63 : Standard__long_long_float.long_long_float) (temp___is_init_60 : bool) (temp___do_constant_61 : bool) (temp___do_toplevel_62 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___64 : Standard__long_long_float.long_long_float) (temp___65 : bool)  =
  true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_69 : int) (temp___is_init_66 : bool) (temp___do_constant_67 : bool) (temp___do_toplevel_68 : bool)  =
  (if (( temp___is_init_66 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_69)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___70 : int) (temp___71 : bool)  =
  true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_75 : int) (temp___is_init_72 : bool) (temp___do_constant_73 : bool) (temp___do_toplevel_74 : bool)  =
  (if (( temp___is_init_72 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_75)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___76 : int) (temp___77 : bool)  =
  true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_81 : int) (temp___is_init_78 : bool) (temp___do_constant_79 : bool) (temp___do_toplevel_80 : bool)  =
  (if (( temp___is_init_78 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_81)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___82 : int) (temp___83 : bool)  =
  true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_87 : Standard__string.string) (temp___is_init_84 : bool) (temp___do_constant_85 : bool) (temp___do_toplevel_86 : bool)  =
  (if (temp___do_constant_85) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_87) (Standard__string.last temp___expr_87))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_92 : Standard__wide_string.wide_string) (temp___is_init_89 : bool) (temp___do_constant_90 : bool) (temp___do_toplevel_91 : bool)  =
  (if (temp___do_constant_90) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_92) (Standard__wide_string.last temp___expr_92))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_97 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_94 : bool) (temp___do_constant_95 : bool) (temp___do_toplevel_96 : bool)  =
  (if (temp___do_constant_95) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_97) (Standard__wide_wide_string.last temp___expr_97))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration__axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_102 : Standard__duration.duration) (temp___is_init_99 : bool) (temp___do_constant_100 : bool) (temp___do_toplevel_101 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___103 : Standard__duration.duration) (temp___104 : bool)  =
  true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_108 : int) (temp___is_init_105 : bool) (temp___do_constant_106 : bool) (temp___do_toplevel_107 : bool)  =
  (if (( temp___is_init_105 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_108)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___109 : int) (temp___110 : bool)  =
  true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_114 : int) (temp___is_init_111 : bool) (temp___do_constant_112 : bool) (temp___do_toplevel_113 : bool)  =
  (if (( temp___is_init_111 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_114)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___115 : int) (temp___116 : bool)  =
  true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_120 : int) (temp___is_init_117 : bool) (temp___do_constant_118 : bool) (temp___do_toplevel_119 : bool)  =
  (if (( temp___is_init_117 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_120)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___121 : int) (temp___122 : bool)  =
  true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_126 : int) (temp___is_init_123 : bool) (temp___do_constant_124 : bool) (temp___do_toplevel_125 : bool)  =
  (if (( temp___is_init_123 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_126)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___127 : int) (temp___128 : bool)  =
  true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_132 : int) (temp___is_init_129 : bool) (temp___do_constant_130 : bool) (temp___do_toplevel_131 : bool)  =
  (if (( temp___is_init_129 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_132)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___133 : int) (temp___134 : bool)  =
  true

end

(* Module giving axioms for type "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_138 : Standard__universal_real.universal_real) (temp___is_init_135 : bool) (temp___do_constant_136 : bool) (temp___do_toplevel_137 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___139 : Standard__universal_real.universal_real) (temp___140 : bool)  =
  true

end

(* Module for possibly declaring a logic function for "set_name" defined at aunit-test_filters.ads:51, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_filters__set_name
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_active__2" defined at aunit-test_filters.ads:64, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_filters__is_active__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_filters__name_filter

 function is_active__2 #"aunit-test_filters.ads" 64 0 0# 
   (filter : Aunit__test_filters__name_filter.name_filter) (t : Aunit__tests__test.test) (__HEAP : Main.__type_of_heap) : bool
 
 namespace Dispatch
  function is_active__2 #"aunit-test_filters.ads" 64 0 0# 
    (filter : Aunit__test_filters__name_filter.name_filter) (t : Aunit__tests__test.test) (__HEAP : Main.__type_of_heap) : bool

 end

end

(* Module for possibly declaring a logic function for "clock" defined at a-calend.ads:58, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__clock
 use        Ada__calendar__clock_time
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function clock #"a-calend.ads" 58 0 0# 
   (ada__calendar__clock_time : Main.__private) : Ada__calendar__time.time

end

(* Module for possibly declaring a logic function for "split" defined at a-calend.ads:71, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__split
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "start_measure" defined at aunit-time_measure.ads:46, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__time_measure__start_measure
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "stop_measure" defined at aunit-time_measure.ads:49, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__time_measure__stop_measure
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__clear
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__move
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__insert__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__delete_first
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__delete_last
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__reverse_elements
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__swap
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__swap_links
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__splice
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__splice__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__splice__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__next
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_results__result_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__next__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__previous
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_results__result_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__previous__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__has_element
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : bool

end

(* Module for possibly declaring a logic function for "set_elapsed" defined at aunit-test_results.ads:99, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__set_elapsed
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "error_count" defined at aunit-test_results.ads:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__error_count
 use        Aunit__test_results__e_count
 use        Aunit__test_results__e_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function error_count #"aunit-test_results.ads" 102 0 0# 
   (r : Aunit__test_results__result.result__) (__HEAP : Main.__type_of_heap) (aunit__test_results__e_count : Main.__private) : int
 
 namespace Dispatch
  function error_count #"aunit-test_results.ads" 102 0 0# 
    (r : Aunit__test_results__result.result__) (__HEAP : Main.__type_of_heap) (aunit__test_results__e_count : Main.__private) : int

 end

end

(* Module for possibly declaring a logic function for "errors" defined at aunit-test_results.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__errors
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "failure_count" defined at aunit-test_results.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__failure_count
 use        Aunit__test_results__f_count
 use        Aunit__test_results__f_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function failure_count #"aunit-test_results.ads" 109 0 0# 
   (r : Aunit__test_results__result.result__) (__HEAP : Main.__type_of_heap) (aunit__test_results__f_count : Main.__private) : int
 
 namespace Dispatch
  function failure_count #"aunit-test_results.ads" 109 0 0# 
    (r : Aunit__test_results__result.result__) (__HEAP : Main.__type_of_heap) (aunit__test_results__f_count : Main.__private) : int

 end

end

(* Module for possibly declaring a logic function for "failures" defined at aunit-test_results.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__failures
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "start_test" defined at aunit-test_results.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__start_test
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "success_count" defined at aunit-test_results.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__success_count
 use        Aunit__test_results__s_count
 use        Aunit__test_results__s_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function success_count #"aunit-test_results.ads" 121 0 0# 
   (r : Aunit__test_results__result.result__) (__HEAP : Main.__type_of_heap) (aunit__test_results__s_count : Main.__private) : int
 
 namespace Dispatch
  function success_count #"aunit-test_results.ads" 121 0 0# 
    (r : Aunit__test_results__result.result__) (__HEAP : Main.__type_of_heap) (aunit__test_results__s_count : Main.__private) : int

 end

end

(* Module for possibly declaring a logic function for "successes" defined at aunit-test_results.ads:124, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__successes
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "successful" defined at aunit-test_results.ads:127, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__successful
 use        Aunit__test_results__s_count
 use        Aunit__test_results__s_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function successful #"aunit-test_results.ads" 127 0 0# 
   (r : Aunit__test_results__result.result__) (__HEAP : Main.__type_of_heap) (aunit__test_results__s_count : Main.__private) : bool
 
 namespace Dispatch
  function successful #"aunit-test_results.ads" 127 0 0# 
    (r : Aunit__test_results__result.result__) (__HEAP : Main.__type_of_heap) (aunit__test_results__s_count : Main.__private) : bool

 end

end

(* Module for possibly declaring a logic function for "clear" defined at aunit-test_results.ads:133, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__clear
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module System__min_int
 use import "_gnatprove_standard".Main

 function min_int #"system.ads" 51 0 0# "model" "model_trace:10653" 
   : int

end

(* Module for defining the constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_int
 use import "_gnatprove_standard".Main

 function max_int #"system.ads" 52 0 0# "model" "model_trace:10664" 
   : int

end

(* Module for defining the constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_binary_modulus
 use import "_gnatprove_standard".Main

 function max_binary_modulus #"system.ads" 54 0 0# "model" "model_trace:10675" 
   : int

end

(* Module for defining the constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_nonbinary_modulus
 use import "_gnatprove_standard".Main

 function max_nonbinary_modulus #"system.ads" 55 0 0# "model" "model_trace:10688" 
   : int

end

(* Module for defining the constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_base_digits
 use import "_gnatprove_standard".Main

 function max_base_digits #"system.ads" 57 0 0# "model" "model_trace:10703" 
   : int

end

(* Module for defining the constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_digits
 use import "_gnatprove_standard".Main

 function max_digits #"system.ads" 58 0 0# "model" "model_trace:10713" 
   : int

end

(* Module for defining the constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_mantissa
 use import "_gnatprove_standard".Main

 function max_mantissa #"system.ads" 60 0 0# "model" "model_trace:10723" 
   : int

end

(* Module for defining the constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module System__fine_delta
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function fine_delta #"system.ads" 61 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__tick
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function tick #"system.ads" 63 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_unit
 use import "_gnatprove_standard".Main

 function storage_unit #"system.ads" 71 0 0# "model" "model_trace:10774" 
   : int

end

(* Module for defining the constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module System__word_size
 use import "_gnatprove_standard".Main

 function word_size #"system.ads" 72 0 0# "model" "model_trace:10783" 
   : int

end

(* Module for defining the constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module System__memory_size
 use import "_gnatprove_standard".Main

 function memory_size #"system.ads" 73 0 0# "model" "model_trace:10792" 
   : int

end

(* Module for defining the value of the aggregate at system.ads:166, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__underlying_priorities__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 function system__underlying_priorities__aggregate_def #"system.ads" 166 0 0# 
   (temp___142 : int) (temp___143 : int) (temp___144 : int) (temp___145 : int) (temp___146 : int) (temp___147 : int) (temp___148 : int) (temp___149 : int) (temp___150 : int) (temp___151 : int) (temp___152 : int) (temp___153 : int) (temp___154 : int) (temp___155 : int) (temp___156 : int) (temp___157 : int) : Array__Int__Standard__integer.map
 
 axiom def_axiom :
  (forall temp___142 temp___143 temp___144 temp___145 temp___146 temp___147 temp___148 temp___149 temp___150 temp___151 temp___152 temp___153 temp___154 temp___155 temp___156 temp___157 : int.
   (let temp___141 = (system__underlying_priorities__aggregate_def temp___142 temp___143 temp___144 temp___145 temp___146 temp___147 temp___148 temp___149 temp___150 temp___151 temp___152 temp___153 temp___154 temp___155 temp___156 temp___157) in (
    (forall temp___158 : int.
     (if (( (31 <= temp___158) /\ (temp___158 <= 31) )) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___157))) else if (( (21 <= temp___158) /\ (temp___158 <= 30) )) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___156)))  else if ((temp___158 = 20)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___155)))  else if ((temp___158 = 19)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___154)))  else if ((temp___158 = 18)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___153)))  else if ((temp___158 = 17)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___152)))  else if ((temp___158 = 16)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___151)))  else if ((temp___158 = 15)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___150)))  else if ((temp___158 = 14)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___149)))  else if ((temp___158 = 13)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___148)))  else if ((temp___158 = 12)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___147)))  else if ((temp___158 = 11)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___146)))  else if ((temp___158 = 10)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___145)))  else if ((temp___158 = 9)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___144)))  else if ((temp___158 = 8)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___143)))  else if (( (0 <= temp___158) /\ (temp___158 <= 7) )) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___142))) else (
      true)))))
  )

end

(* Module giving axioms for type "status" defined at aunit.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__status__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Aunit__status

 predicate dynamic_invariant #"system.ads" 167 0 0# "inline" 
   (temp___expr_162 : int) (temp___is_init_159 : bool) (temp___do_constant_160 : bool) (temp___do_toplevel_161 : bool)  =
  (if (( temp___is_init_159 \/ (Aunit__status.first <= Aunit__status.last) )) then (
   (Aunit__status.dynamic_property Aunit__status.first Aunit__status.last temp___expr_162)) else true)
 
 predicate default_initial_assumption #"aunit.ads" 40 0 0# "inline" 
   (temp___163 : int) (temp___164 : bool)  =
  true

end

(* Module giving axioms for type "test" defined at aunit-tests.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__tests__test__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test

 predicate dynamic_invariant #"aunit.ads" 40 0 0# "inline" 
   (temp___expr_168 : Aunit__tests__test.test) (temp___is_init_165 : bool) (temp___do_constant_166 : bool) (temp___do_toplevel_167 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-tests.ads" 43 0 0# "inline" 
   (temp___169 : Aunit__tests__test.test) (temp___170 : bool)  =
  ((Aunit__tests__test.attr__tag temp___169) = Aunit__tests__test.__tag)

end

(* Module giving axioms for type "TtestC" defined at aunit-tests.ads:38, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__tests__TtestC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test

 predicate dynamic_invariant #"aunit-tests.ads" 43 0 0# "inline" 
   (temp___expr_174 : Aunit__tests__test.test) (temp___is_init_171 : bool) (temp___do_constant_172 : bool) (temp___do_toplevel_173 : bool)  =
  true

end

(* Module giving axioms for type "test_filter" defined at aunit-test_filters.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_filters__test_filter__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__test_filter

 predicate dynamic_invariant #"aunit-tests.ads" 43 0 0# "inline" 
   (temp___expr_178 : Aunit__test_filters__test_filter.test_filter) (temp___is_init_175 : bool) (temp___do_constant_176 : bool) (temp___do_toplevel_177 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-test_filters.ads" 70 0 0# "inline" 
   (temp___179 : Aunit__test_filters__test_filter.test_filter) (temp___180 : bool)  =
  ((Aunit__test_filters__test_filter.attr__tag temp___179) = Aunit__test_filters__test_filter.__tag)

end

(* Module giving axioms for type "name_filter" defined at aunit-test_filters.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_filters__name_filter__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__name_filter

 predicate dynamic_invariant #"aunit-test_filters.ads" 70 0 0# "inline" 
   (temp___expr_184 : Aunit__test_filters__name_filter.name_filter) (temp___is_init_181 : bool) (temp___do_constant_182 : bool) (temp___do_toplevel_183 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-test_filters.ads" 48 0 0# "inline" 
   (temp___185 : Aunit__test_filters__name_filter.name_filter) (temp___186 : bool)  =
  ((Aunit__test_filters__name_filter.attr__tag temp___185) = Aunit__test_filters__name_filter.__tag)

end

(* Module giving axioms for type "Ttest_filterC" defined at aunit-test_filters.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_filters__Ttest_filterC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__test_filter

 predicate dynamic_invariant #"aunit-test_filters.ads" 48 0 0# "inline" 
   (temp___expr_190 : Aunit__test_filters__test_filter.test_filter) (temp___is_init_187 : bool) (temp___do_constant_188 : bool) (temp___do_toplevel_189 : bool)  =
  true

end

(* Module giving axioms for type "Tname_filterC" defined at aunit-test_filters.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_filters__Tname_filterC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__name_filter

 predicate dynamic_invariant #"aunit-test_filters.ads" 70 0 0# "inline" 
   (temp___expr_194 : Aunit__test_filters__name_filter.name_filter) (temp___is_init_191 : bool) (temp___do_constant_192 : bool) (temp___do_toplevel_193 : bool)  =
  true

end

(* Module giving axioms for type "hash_type" defined at ada_containers.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada_containers__hash_type__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Ada_containers__hash_type

 predicate dynamic_invariant #"aunit-test_filters.ads" 48 0 0# "inline" 
   (temp___expr_198 : BV32.t) (temp___is_init_195 : bool) (temp___do_constant_196 : bool) (temp___do_toplevel_197 : bool)  =
  (if (( temp___is_init_195 \/ (BV32.ule Ada_containers__hash_type.first Ada_containers__hash_type.last) )) then (
   (Ada_containers__hash_type.dynamic_property Ada_containers__hash_type.first Ada_containers__hash_type.last temp___expr_198)) else true)
 
 predicate default_initial_assumption #"ada_containers.ads" 19 0 0# "inline" 
   (temp___199 : BV32.t) (temp___200 : bool)  =
  true

end

(* Module giving axioms for type "Tcount_typeB" defined at ada_containers.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada_containers__Tcount_typeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "count_type" defined at ada_containers.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada_containers__count_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada_containers__count_type

 predicate dynamic_invariant #"ada_containers.ads" 19 0 0# "inline" 
   (temp___expr_204 : int) (temp___is_init_201 : bool) (temp___do_constant_202 : bool) (temp___do_toplevel_203 : bool)  =
  (if (( temp___is_init_201 \/ (Ada_containers__count_type.first <= Ada_containers__count_type.last) )) then (
   (Ada_containers__count_type.dynamic_property Ada_containers__count_type.first Ada_containers__count_type.last temp___expr_204)) else true)
 
 predicate default_initial_assumption #"ada_containers.ads" 20 0 0# "inline" 
   (temp___205 : int) (temp___206 : bool)  =
  true

end

(* Module giving axioms for type "time" defined at a-calend.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__time__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 predicate dynamic_invariant #"ada_containers.ads" 20 0 0# "inline" 
   (temp___expr_210 : Ada__calendar__time.time) (temp___is_init_207 : bool) (temp___do_constant_208 : bool) (temp___do_toplevel_209 : bool)  =
  true
 
 predicate default_initial_assumption #"a-calend.ads" 44 0 0# "inline" 
   (temp___211 : Ada__calendar__time.time) (temp___212 : bool)  =
  true

end

(* Module giving axioms for type "year_number" defined at a-calend.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__year_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__year_number

 predicate dynamic_invariant #"a-calend.ads" 44 0 0# "inline" 
   (temp___expr_216 : int) (temp___is_init_213 : bool) (temp___do_constant_214 : bool) (temp___do_toplevel_215 : bool)  =
  (if (( temp___is_init_213 \/ (Ada__calendar__year_number.first <= Ada__calendar__year_number.last) )) then (
   (Ada__calendar__year_number.dynamic_property Ada__calendar__year_number.first Ada__calendar__year_number.last temp___expr_216)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 50 0 0# "inline" 
   (temp___217 : int) (temp___218 : bool)  =
  true

end

(* Module giving axioms for type "month_number" defined at a-calend.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__month_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__month_number

 predicate dynamic_invariant #"a-calend.ads" 50 0 0# "inline" 
   (temp___expr_222 : int) (temp___is_init_219 : bool) (temp___do_constant_220 : bool) (temp___do_toplevel_221 : bool)  =
  (if (( temp___is_init_219 \/ (Ada__calendar__month_number.first <= Ada__calendar__month_number.last) )) then (
   (Ada__calendar__month_number.dynamic_property Ada__calendar__month_number.first Ada__calendar__month_number.last temp___expr_222)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 51 0 0# "inline" 
   (temp___223 : int) (temp___224 : bool)  =
  true

end

(* Module giving axioms for type "day_number" defined at a-calend.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__day_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__day_number

 predicate dynamic_invariant #"a-calend.ads" 51 0 0# "inline" 
   (temp___expr_228 : int) (temp___is_init_225 : bool) (temp___do_constant_226 : bool) (temp___do_toplevel_227 : bool)  =
  (if (( temp___is_init_225 \/ (Ada__calendar__day_number.first <= Ada__calendar__day_number.last) )) then (
   (Ada__calendar__day_number.dynamic_property Ada__calendar__day_number.first Ada__calendar__day_number.last temp___expr_228)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 52 0 0# "inline" 
   (temp___229 : int) (temp___230 : bool)  =
  true

end

(* Module giving axioms for type "day_duration" defined at a-calend.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__day_duration__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 predicate dynamic_invariant #"a-calend.ads" 52 0 0# "inline" 
   (temp___expr_234 : Ada__calendar__day_duration.day_duration) (temp___is_init_231 : bool) (temp___do_constant_232 : bool) (temp___do_toplevel_233 : bool)  =
  true
 
 predicate default_initial_assumption #"a-calend.ads" 56 0 0# "inline" 
   (temp___235 : Ada__calendar__day_duration.day_duration) (temp___236 : bool)  =
  true

end

(* Module giving axioms for type "time" defined at aunit-time_measure.ads:36, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__time_measure__time__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 predicate dynamic_invariant #"a-calend.ads" 56 0 0# "inline" 
   (temp___expr_240 : Aunit__time_measure__time.time) (temp___is_init_237 : bool) (temp___do_constant_238 : bool) (temp___do_toplevel_239 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-time_measure.ads" 36 0 0# "inline" 
   (temp___241 : Aunit__time_measure__time.time) (temp___242 : bool)  =
  true

end

(* Module giving axioms for type "Taunit_durationB" defined at aunit-time_measure.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__time_measure__Taunit_durationB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "aunit_duration" defined at aunit-time_measure.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__time_measure__aunit_duration__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__aunit_duration

 predicate dynamic_invariant #"aunit-time_measure.ads" 36 0 0# "inline" 
   (temp___expr_248 : Aunit__time_measure__aunit_duration.aunit_duration) (temp___is_init_245 : bool) (temp___do_constant_246 : bool) (temp___do_toplevel_247 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-time_measure.ads" 70 0 0# "inline" 
   (temp___249 : Aunit__time_measure__aunit_duration.aunit_duration) (temp___250 : bool)  =
  true

end

(* Module giving axioms for type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__result_lists__list__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 predicate dynamic_invariant #"aunit-time_measure.ads" 70 0 0# "inline" 
   (temp___expr_254 : Aunit__test_results__result_lists__list.list) (temp___is_init_251 : bool) (temp___do_constant_252 : bool) (temp___do_toplevel_253 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___255 : Aunit__test_results__result_lists__list.list) (temp___256 : bool)  =
  ((Aunit__test_results__result_lists__list.attr__tag temp___255) = Aunit__test_results__result_lists__list.__tag)

end

(* Module giving axioms for type "result" defined at aunit-test_results.ads:140, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__result__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada_containers__count_type
 use        Aunit__time_measure__time
 use        Aunit__time_measure__null_time
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_260 : Aunit__test_results__result.result__) (temp___is_init_257 : bool) (temp___do_constant_258 : bool) (temp___do_toplevel_259 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-test_results.ads" 140 0 0# "inline" 
   (temp___261 : Aunit__test_results__result.result__) (temp___262 : bool)  =
  ( ( ( ((Aunit__test_results__result.attr__tag temp___261) = Aunit__test_results__result.__tag) /\ (if ((Aunit__test_results__result.tests_run__pred temp___261)) then (
   ((Ada_containers__count_type.to_rep (Aunit__test_results__result.rec__tests_run (Aunit__test_results__result.__split_fields temp___261))) = 0)) else true) ) /\ (if ((Aunit__test_results__result.result_list__pred temp___261)) then (
   (let temp___263 = (Aunit__test_results__result.rec__result_list (Aunit__test_results__result.__split_fields temp___261)) in (
    ((Aunit__test_results__result_lists__list.attr__tag temp___263) = Aunit__test_results__result_lists__list.__tag)))
  ) else true) ) /\ (if ((Aunit__test_results__result.elapsed_time__pred temp___261)) then (
   ((Aunit__test_results__result.rec__elapsed_time (Aunit__test_results__result.__split_fields temp___261)) = Aunit__time_measure__null_time.null_time)) else true) )

end

(* Module giving axioms for type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__result_lists__cursor__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 predicate dynamic_invariant #"aunit-time_measure.ads" 43 0 0# "inline" 
   (temp___expr_267 : Aunit__test_results__result_lists__cursor.cursor) (temp___is_init_264 : bool) (temp___do_constant_265 : bool) (temp___do_toplevel_266 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___268 : Aunit__test_results__result_lists__cursor.cursor) (temp___269 : bool)  =
  true

end

(* Module giving axioms for type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__result_lists__TlistC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___expr_273 : Aunit__test_results__result_lists__list.list) (temp___is_init_270 : bool) (temp___do_constant_271 : bool) (temp___do_toplevel_272 : bool)  =
  true

end

(* Module giving axioms for type "TresultC" defined at aunit-test_results.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__TresultC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_277 : Aunit__test_results__result.result__) (temp___is_init_274 : bool) (temp___do_constant_275 : bool) (temp___do_toplevel_276 : bool)  =
  true

end

(* Module giving axioms for type "name" defined at system.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__name

 predicate dynamic_invariant #"aunit-test_results.ads" 140 0 0# "inline" 
   (temp___expr_281 : int) (temp___is_init_278 : bool) (temp___do_constant_279 : bool) (temp___do_toplevel_280 : bool)  =
  (if (( temp___is_init_278 \/ (System__name.first <= System__name.last) )) then (
   (System__name.dynamic_property System__name.first System__name.last temp___expr_281)) else true)
 
 predicate default_initial_assumption #"system.ads" 46 0 0# "inline" 
   (temp___282 : int) (temp___283 : bool)  =
  true

end

(* Module giving axioms for type "address" defined at system.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address

 predicate dynamic_invariant #"system.ads" 46 0 0# "inline" 
   (temp___expr_287 : BV32.t) (temp___is_init_284 : bool) (temp___do_constant_285 : bool) (temp___do_toplevel_286 : bool)  =
  (if (( temp___is_init_284 \/ (BV32.ule System__address.first System__address.last) )) then (
   (System__address.dynamic_property System__address.first System__address.last temp___expr_287)) else true)
 
 predicate default_initial_assumption #"system.ads" 108 0 0# "inline" 
   (temp___288 : BV32.t) (temp___289 : bool)  =
  true

end

(* Module giving axioms for type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__bit_order

 predicate dynamic_invariant #"system.ads" 108 0 0# "inline" 
   (temp___expr_293 : int) (temp___is_init_290 : bool) (temp___do_constant_291 : bool) (temp___do_toplevel_292 : bool)  =
  (if (( temp___is_init_290 \/ (System__bit_order.first <= System__bit_order.last) )) then (
   (System__bit_order.dynamic_property System__bit_order.first System__bit_order.last temp___expr_293)) else true)
 
 predicate default_initial_assumption #"system.ads" 91 0 0# "inline" 
   (temp___294 : int) (temp___295 : bool)  =
  true

end

(* Module giving axioms for type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__any_priority

 predicate dynamic_invariant #"system.ads" 91 0 0# "inline" 
   (temp___expr_299 : int) (temp___is_init_296 : bool) (temp___do_constant_297 : bool) (temp___do_toplevel_298 : bool)  =
  (if (( temp___is_init_296 \/ (System__any_priority.first <= System__any_priority.last) )) then (
   (System__any_priority.dynamic_property System__any_priority.first System__any_priority.last temp___expr_299)) else true)
 
 predicate default_initial_assumption #"system.ads" 100 0 0# "inline" 
   (temp___300 : int) (temp___301 : bool)  =
  true

end

(* Module giving axioms for type "priority" defined at system.ads:101, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__priority

 predicate dynamic_invariant #"system.ads" 100 0 0# "inline" 
   (temp___expr_305 : int) (temp___is_init_302 : bool) (temp___do_constant_303 : bool) (temp___do_toplevel_304 : bool)  =
  (if (( temp___is_init_302 \/ (System__priority.first <= System__priority.last) )) then (
   (System__priority.dynamic_property System__priority.first System__priority.last temp___expr_305)) else true)
 
 predicate default_initial_assumption #"system.ads" 101 0 0# "inline" 
   (temp___306 : int) (temp___307 : bool)  =
  true

end

(* Module giving axioms for type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__interrupt_priority

 predicate dynamic_invariant #"system.ads" 101 0 0# "inline" 
   (temp___expr_311 : int) (temp___is_init_308 : bool) (temp___do_constant_309 : bool) (temp___do_toplevel_310 : bool)  =
  (if (( temp___is_init_308 \/ (System__interrupt_priority.first <= System__interrupt_priority.last) )) then (
   (System__interrupt_priority.dynamic_property System__interrupt_priority.first System__interrupt_priority.last temp___expr_311)) else true)
 
 predicate default_initial_assumption #"system.ads" 102 0 0# "inline" 
   (temp___312 : int) (temp___313 : bool)  =
  true

end

(* Module giving axioms for type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__Tpriorities_mappingB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priorities_mapping__axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 predicate dynamic_invariant #"system.ads" 102 0 0# "inline" 
   (temp___expr_317 : Array__Int__Standard__integer.map) (temp___is_init_314 : bool) (temp___do_constant_315 : bool) (temp___do_toplevel_316 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 161 0 0# "inline" 
   (temp___319 : Array__Int__Standard__integer.map) (temp___320 : bool)  =
  true

end

(* Module giving axioms for type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "reporter" defined at aunit-reporter.ads:37, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__reporter__reporter__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__reporter__reporter

 predicate dynamic_invariant #"system.ads" 161 0 0# "inline" 
   (temp___expr_326 : Aunit__reporter__reporter.reporter) (temp___is_init_323 : bool) (temp___do_constant_324 : bool) (temp___do_toplevel_325 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-reporter.ads" 37 0 0# "inline" 
   (temp___327 : Aunit__reporter__reporter.reporter) (temp___328 : bool)  =
  ((Aunit__reporter__reporter.attr__tag temp___327) = Aunit__reporter__reporter.__tag)

end

(* Module giving axioms for type "TreporterC" defined at aunit-reporter.ads:37, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__reporter__TreporterC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__reporter__reporter

 predicate dynamic_invariant #"aunit-reporter.ads" 37 0 0# "inline" 
   (temp___expr_332 : Aunit__reporter__reporter.reporter) (temp___is_init_329 : bool) (temp___do_constant_330 : bool) (temp___do_toplevel_331 : bool)  =
  true

end
(* Module for defining the value of constant "null_time" defined at aunit-time_measure.ads:43, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Aunit__time_measure__null_time__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__time
 use        Ada__calendar__time_of
 use        Aunit__time_measure__time
 use        Aunit__time_measure__null_time

 axiom null_time__def_axiom :
  ((Aunit__time_measure__null_time.null_time ) = { Aunit__time_measure__time.__split_fields = { Aunit__time_measure__time.rec__start = (Ada__calendar__time_of.time_of 1901 1 1 0); Aunit__time_measure__time.rec__stop = (Ada__calendar__time_of.time_of 1901 1 1 0) } })

end

(* Module for defining the value of constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__system_name

 axiom system_name__def_axiom :
  ((System__system_name.system_name ) = 0)

end

(* Module for defining the value of constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__min_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__min_int

 axiom min_int__def_axiom :
  ((System__min_int.min_int ) = ( -9223372036854775808 ))

end

(* Module for defining the value of constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_int

 axiom max_int__def_axiom :
  ((System__max_int.max_int ) = 9223372036854775807)

end

(* Module for defining the value of constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_binary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_binary_modulus

 axiom max_binary_modulus__def_axiom :
  ((System__max_binary_modulus.max_binary_modulus ) = 18446744073709551616)

end

(* Module for defining the value of constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_nonbinary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_nonbinary_modulus

 axiom max_nonbinary_modulus__def_axiom :
  ((System__max_nonbinary_modulus.max_nonbinary_modulus ) = 4294967295)

end

(* Module for defining the value of constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_base_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_base_digits

 axiom max_base_digits__def_axiom :
  ((System__max_base_digits.max_base_digits ) = 18)

end

(* Module for defining the value of constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_digits

 axiom max_digits__def_axiom :
  ((System__max_digits.max_digits ) = 18)

end

(* Module for defining the value of constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_mantissa__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_mantissa

 axiom max_mantissa__def_axiom :
  ((System__max_mantissa.max_mantissa ) = 63)

end

(* Module for defining the value of constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fine_delta__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__fine_delta

 axiom fine_delta__def_axiom :
  ((System__fine_delta.fine_delta ) = (Standard__universal_real.of_real (0.000000000000000000108420217248550443400745280086994171142578125)))

end

(* Module for defining the value of constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tick__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__tick

 axiom tick__def_axiom :
  ((System__tick.tick ) = (Standard__universal_real.of_real (1.0E-2)))

end

(* Module for defining the value of constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__storage_unit__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_unit

 axiom storage_unit__def_axiom :
  ((System__storage_unit.storage_unit ) = 8)

end

(* Module for defining the value of constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__word_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__word_size

 axiom word_size__def_axiom :
  ((System__word_size.word_size ) = 32)

end

(* Module for defining the value of constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__memory_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__memory_size

 axiom memory_size__def_axiom :
  ((System__memory_size.memory_size ) = 4294967296)

end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_bit_order

 axiom default_bit_order__def_axiom :
  ((System__default_bit_order.default_bit_order ) = 1)

end

(* Module for defining the value of constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_priority

 axiom max_priority__def_axiom :
  ((System__max_priority.max_priority ) = 30)

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_interrupt_priority

 axiom max_interrupt_priority__def_axiom :
  ((System__max_interrupt_priority.max_interrupt_priority ) = 31)

end

(* Module for defining the value of constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_priority

 axiom default_priority__def_axiom :
  ((System__default_priority.default_priority ) = 15)

end

(* Module for defining the value of constant "null_address" defined at system.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32
 use        System__null_address

 axiom null_address__def_axiom :
  ((System__null_address.null_address ) = (BV32.of_int 0))

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_divide_checks

 axiom backend_divide_checks__def_axiom :
  ((System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_overflow_checks

 axiom backend_overflow_checks__def_axiom :
  ((System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__command_line_args

 axiom command_line_args__def_axiom :
  ((System__command_line_args.command_line_args ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__configurable_run_time

 axiom configurable_run_time__def_axiom :
  ((System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__denorm

 axiom denorm__def_axiom :
  ((System__denorm.denorm ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__duration_32_bits

 axiom duration_32_bits__def_axiom :
  ((System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__exit_status_supported

 axiom exit_status_supported__def_axiom :
  ((System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__fractional_fixed_ops

 axiom fractional_fixed_ops__def_axiom :
  ((System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_layout

 axiom frontend_layout__def_axiom :
  ((System__frontend_layout.frontend_layout ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_overflows

 axiom machine_overflows__def_axiom :
  ((System__machine_overflows.machine_overflows ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_rounds

 axiom machine_rounds__def_axiom :
  ((System__machine_rounds.machine_rounds ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__preallocated_stacks

 axiom preallocated_stacks__def_axiom :
  ((System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__signed_zeros

 axiom signed_zeros__def_axiom :
  ((System__signed_zeros.signed_zeros ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_default

 axiom stack_check_default__def_axiom :
  ((System__stack_check_default.stack_check_default ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_probes

 axiom stack_check_probes__def_axiom :
  ((System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_limits

 axiom stack_check_limits__def_axiom :
  ((System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_aggregates

 axiom support_aggregates__def_axiom :
  ((System__support_aggregates.support_aggregates ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_atomic_primitives

 axiom support_atomic_primitives__def_axiom :
  ((System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_assign

 axiom support_composite_assign__def_axiom :
  ((System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_compare

 axiom support_composite_compare__def_axiom :
  ((System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_long_shifts

 axiom support_long_shifts__def_axiom :
  ((System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__always_compatible_rep

 axiom always_compatible_rep__def_axiom :
  ((System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__suppress_standard_library

 axiom suppress_standard_library__def_axiom :
  ((System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__use_ada_main_program_name

 axiom use_ada_main_program_name__def_axiom :
  ((System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_exceptions__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_exceptions

 axiom frontend_exceptions__def_axiom :
  ((System__frontend_exceptions.frontend_exceptions ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__zcx_by_default

 axiom zcx_by_default__def_axiom :
  ((System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__underlying_priorities__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__underlying_priorities
 use        Array__Int__Standard__integer
 use        System__underlying_priorities__aggregate_def
 use        Array__Int__Standard__integer

 axiom underlying_priorities__def_axiom :
  ((System__underlying_priorities.underlying_priorities ) = (System__underlying_priorities__aggregate_def.system__underlying_priorities__aggregate_def ( -15 ) ( -7 ) ( -6 ) ( -5 ) ( -4 ) ( -3 ) ( -2 ) ( -1 ) 0 1 2 3 4 5 6 15))

end

(* Module for declaring a program function (and possibly an axiom) for "is_active" defined at aunit-test_filters.ads:42, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_filters__is_active__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_filters__test_filter
 use        Aunit__test_filters__is_active

 val is_active #"aunit-test_filters.ads" 42 0 0# 
   (filter : Aunit__test_filters__test_filter.test_filter) (t : Aunit__tests__test.test) : bool
  requires { true }
  ensures { (result = (Aunit__test_filters__is_active.is_active filter t)) }
 
 namespace Dispatch
  val is_active #"aunit-test_filters.ads" 42 0 0# 
    (filter : Aunit__test_filters__test_filter.test_filter) (t : Aunit__tests__test.test) : bool
   requires { true }
   ensures { (result = (Aunit__test_filters__is_active.Dispatch.is_active filter t)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "set_name" defined at aunit-test_filters.ads:51, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_filters__set_name__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Aunit__test_filters__name_filter
 use        Aunit__test_filters__name_filter__axiom

 val set_name #"aunit-test_filters.ads" 51 0 0# 
   (filter__split_fields : Aunit__test_filters__name_filter.__split_fields__ref) (filter__attr__tag : int) (name : Standard__string.string) : unit
  requires { true }
  ensures { (Aunit__test_filters__name_filter__axiom.dynamic_invariant { Aunit__test_filters__name_filter.__split_fields = filter__split_fields.Aunit__test_filters__name_filter.__split_fields__content; Aunit__test_filters__name_filter.attr__tag = filter__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, filter__split_fields}
 
 namespace Dispatch
  val set_name #"aunit-test_filters.ads" 51 0 0# 
    (filter__split_fields : Aunit__test_filters__name_filter.__split_fields__ref) (filter__attr__tag : int) (name : Standard__string.string) : unit
   requires { true }
   ensures { (Aunit__test_filters__name_filter__axiom.dynamic_invariant { Aunit__test_filters__name_filter.__split_fields = filter__split_fields.Aunit__test_filters__name_filter.__split_fields__content; Aunit__test_filters__name_filter.attr__tag = filter__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, filter__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "is_active__2" defined at aunit-test_filters.ads:64, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_filters__is_active__2__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_filters__name_filter
 use        Aunit__test_filters__is_active__2

 val is_active__2 #"aunit-test_filters.ads" 64 0 0# 
   (filter : Aunit__test_filters__name_filter.name_filter) (t : Aunit__tests__test.test) : bool
  requires { true }
  ensures { (result = (Aunit__test_filters__is_active__2.is_active__2 filter t __HEAP.Main.__type_of_heap__content)) }
 
 namespace Dispatch
  val is_active__2 #"aunit-test_filters.ads" 64 0 0# 
    (filter : Aunit__test_filters__name_filter.name_filter) (t : Aunit__tests__test.test) : bool
   requires { true }
   ensures { (result = (Aunit__test_filters__is_active__2.Dispatch.is_active__2 filter t __HEAP.Main.__type_of_heap__content)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "clock" defined at a-calend.ads:58, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__clock__axiom
 use        Ada__calendar__clock_time
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__clock

 val volatile__effect #"a-calend.ads" 58 0 0#  : Main.__private__ref 
 
 val clock #"a-calend.ads" 58 0 0# 
   (__void_param : unit) : Ada__calendar__time.time
  requires { true }
  ensures { (Ada__calendar__time__axiom.dynamic_invariant result True False True) }
  writes {volatile__effect}
 
 axiom clock__post_axiom :
  (forall ada__calendar__clock_time : Main.__private [(Ada__calendar__clock.clock ada__calendar__clock_time)].
   ( true -> (let result = (Ada__calendar__clock.clock ada__calendar__clock_time) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "year" defined at a-calend.ads:66, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__year__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__year_number__axiom
 use        Ada__calendar__year

 val year #"a-calend.ads" 66 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__year.year date)) /\ (Ada__calendar__year_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom year__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__year.year date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__year.year date) in (
    (Ada__calendar__year_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "month" defined at a-calend.ads:67, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__month__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__month_number__axiom
 use        Ada__calendar__month

 val month #"a-calend.ads" 67 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__month.month date)) /\ (Ada__calendar__month_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom month__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__month.month date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__month.month date) in (
    (Ada__calendar__month_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "day" defined at a-calend.ads:68, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__day__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__day_number__axiom
 use        Ada__calendar__day

 val day #"a-calend.ads" 68 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__day.day date)) /\ (Ada__calendar__day_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom day__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__day.day date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__day.day date) in (
    (Ada__calendar__day_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "seconds" defined at a-calend.ads:69, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__seconds__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__day_duration
 use        Ada__calendar__day_duration__axiom
 use        Ada__calendar__seconds

 val seconds #"a-calend.ads" 69 0 0# 
   (date : Ada__calendar__time.time) : Ada__calendar__day_duration.day_duration
  requires { true }
  ensures { ( (result = (Ada__calendar__seconds.seconds date)) /\ (Ada__calendar__day_duration__axiom.dynamic_invariant result True False True) ) }
 
 axiom seconds__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__seconds.seconds date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__seconds.seconds date) in (
    (Ada__calendar__day_duration__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "split" defined at a-calend.ads:71, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__split__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__year_number__axiom
 use        Ada__calendar__month_number__axiom
 use        Ada__calendar__day_number__axiom
 use        Ada__calendar__day_duration
 use        Ada__calendar__day_duration__axiom

 val split #"a-calend.ads" 71 0 0# 
   (date : Ada__calendar__time.time) (year : int__ref) (month : int__ref) (day : int__ref) (seconds : Ada__calendar__day_duration.day_duration__ref) : unit
  requires { true }
  ensures { ( ( ( (Ada__calendar__year_number__axiom.dynamic_invariant year.int__content True True True) /\ (Ada__calendar__month_number__axiom.dynamic_invariant month.int__content True True True) ) /\ (Ada__calendar__day_number__axiom.dynamic_invariant day.int__content True True True) ) /\ (Ada__calendar__day_duration__axiom.dynamic_invariant seconds.Ada__calendar__day_duration.day_duration__content True True True) ) }
  writes {year, month, day, seconds}

end

(* Module for declaring a program function (and possibly an axiom) for "time_of" defined at a-calend.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__time_of__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__year_number
 use        Ada__calendar__month_number
 use        Ada__calendar__day_number
 use        Ada__calendar__day_duration
 use        Ada__calendar__time_of

 val time_of #"a-calend.ads" 82 0 0# 
   (year : int) (month : int) (day : int) (seconds : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__time_of.time_of year month day seconds)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom time_of__post_axiom :
  (forall year month day : int.
  (forall seconds : Main.__fixed [(Ada__calendar__time_of.time_of year month day seconds)].
   ( ( ( ( (Ada__calendar__year_number.in_range year) /\ (Ada__calendar__month_number.in_range month) ) /\ (Ada__calendar__day_number.in_range day) ) /\ (Ada__calendar__day_duration.in_range seconds) ) -> (let result = (Ada__calendar__time_of.time_of year month day seconds) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd" defined at a-calend.ads:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oadd__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Oadd

 val oadd #"a-calend.ads" 102 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Oadd.oadd left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__post_axiom :
  (forall left : Ada__calendar__time.time.
  (forall right : Main.__fixed [(Ada__calendar__Oadd.oadd left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Standard__duration.in_range right) ) -> (let result = (Ada__calendar__Oadd.oadd left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd__2" defined at a-calend.ads:103, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oadd__2__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Oadd__2

 val oadd__2 #"a-calend.ads" 103 0 0# 
   (left : Main.__fixed) (right : Ada__calendar__time.time) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Oadd__2.oadd__2 left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__2__post_axiom :
  (forall left : Main.__fixed.
  (forall right : Ada__calendar__time.time [(Ada__calendar__Oadd__2.oadd__2 left right)].
   ( ( (Standard__duration.in_range left) /\ (Ada__calendar__time__axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__calendar__Oadd__2.oadd__2 left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract" defined at a-calend.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Osubtract__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Osubtract

 val osubtract #"a-calend.ads" 104 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Osubtract.osubtract left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__post_axiom :
  (forall left : Ada__calendar__time.time.
  (forall right : Main.__fixed [(Ada__calendar__Osubtract.osubtract left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Standard__duration.in_range right) ) -> (let result = (Ada__calendar__Osubtract.osubtract left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract__2" defined at a-calend.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Osubtract__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Standard__duration__axiom
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Osubtract__2

 val osubtract__2 #"a-calend.ads" 105 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : Standard__duration.duration
  requires { true }
  ensures { ( (result = (Ada__calendar__Osubtract__2.osubtract__2 left right)) /\ (Standard__duration__axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__2__post_axiom :
  (forall left right : Ada__calendar__time.time [(Ada__calendar__Osubtract__2.osubtract__2 left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Ada__calendar__time__axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__calendar__Osubtract__2.osubtract__2 left right) in (
    (Standard__duration__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at a-calend.ads:111, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Olt__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Olt

 val olt #"a-calend.ads" 111 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at a-calend.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Ole__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Ole

 val ole #"a-calend.ads" 112 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at a-calend.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Ogt__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Ogt

 val ogt #"a-calend.ads" 113 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at a-calend.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oge__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Oge

 val oge #"a-calend.ads" 114 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "start_measure" defined at aunit-time_measure.ads:46, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__time_measure__start_measure__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__time__axiom

 val start_measure #"aunit-time_measure.ads" 46 0 0# 
   (t__split_fields : Aunit__time_measure__time.__split_fields__ref) : unit
  requires { true }
  ensures { (Aunit__time_measure__time__axiom.dynamic_invariant { Aunit__time_measure__time.__split_fields = t__split_fields.Aunit__time_measure__time.__split_fields__content } True True True) }
  writes {t__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "stop_measure" defined at aunit-time_measure.ads:49, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__time_measure__stop_measure__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__time__axiom

 val stop_measure #"aunit-time_measure.ads" 49 0 0# 
   (t__split_fields : Aunit__time_measure__time.__split_fields__ref) : unit
  requires { true }
  ensures { (Aunit__time_measure__time__axiom.dynamic_invariant { Aunit__time_measure__time.__split_fields = t__split_fields.Aunit__time_measure__time.__split_fields__content } True True True) }
  writes {t__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "get_measure" defined at aunit-time_measure.ads:52, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__time_measure__get_measure__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__time__axiom
 use        Aunit__time_measure__aunit_duration
 use        Aunit__time_measure__aunit_duration__axiom
 use        Aunit__time_measure__get_measure

 val get_measure #"aunit-time_measure.ads" 52 0 0# 
   (t : Aunit__time_measure__time.time) : Aunit__time_measure__aunit_duration.aunit_duration
  requires { true }
  ensures { ( (result = (Aunit__time_measure__get_measure.get_measure t)) /\ (Aunit__time_measure__aunit_duration__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_measure__post_axiom :
  (forall t : Aunit__time_measure__time.time [(Aunit__time_measure__get_measure.get_measure t)].
   ( (Aunit__time_measure__time__axiom.dynamic_invariant t True True True) -> (let result = (Aunit__time_measure__get_measure.get_measure t) in (
    (Aunit__time_measure__aunit_duration__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__Oeq__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__Oeq__2

 val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_results__result_lists__list.list) (right : Aunit__test_results__result_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_results__result_lists__Oeq__2.oeq__2 left right)) }
 
 namespace Dispatch
  val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_results__result_lists__list.list) (right : Aunit__test_results__result_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_results__result_lists__Oeq__2.Dispatch.oeq__2 left right)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__length__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__length

 val length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__length.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__result_lists__length.Dispatch.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom length__post_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__length.length container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__length.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom length__post__dispatch_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__length.Dispatch.length container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__length.Dispatch.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__is_empty__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__is_empty

 val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_results__result_lists__is_empty.is_empty container)) }
 
 namespace Dispatch
  val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_results__result_lists__is_empty.Dispatch.is_empty container)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__clear__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__move__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val move #"ada_containers-aunit_lists.ads" 83 0 0# 
   (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {__HEAP, target__split_fields, source__split_fields}
 
 namespace Dispatch
  val move #"ada_containers-aunit_lists.ads" 83 0 0# 
    (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {__HEAP, target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__insert__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (position : Aunit__test_results__result_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {container__split_fields, position}
 
 namespace Dispatch
  val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (position : Aunit__test_results__result_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__delete__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_results__result_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields, position}
 
 namespace Dispatch
  val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_results__result_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__delete_first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__delete_last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__reverse_elements__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  writes {container__split_fields}
 
 namespace Dispatch
  val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__swap__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor

 val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_results__result_lists__cursor.cursor) (j : Aunit__test_results__result_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_results__result_lists__cursor.cursor) (j : Aunit__test_results__result_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__swap_links__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor

 val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_results__result_lists__cursor.cursor) (j : Aunit__test_results__result_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_results__result_lists__cursor.cursor) (j : Aunit__test_results__result_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__splice__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor

 val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
   (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields}
 
 namespace Dispatch
  val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
    (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__splice__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
   (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_results__result_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { ( ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields, position}
 
 namespace Dispatch
  val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
    (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_results__result_lists__cursor.cursor__ref) : unit
   requires { true }
   ensures { ( ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__splice__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor

 val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (position : Aunit__test_results__result_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (position : Aunit__test_results__result_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom
 use        Aunit__test_results__result_lists__first

 val first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__first.first container)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_results__result_lists__first.Dispatch.first container)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom first__post_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__first.first container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__first.first container) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom first__post__dispatch_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__first.Dispatch.first container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__first.Dispatch.first container) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom
 use        Aunit__test_results__result_lists__last

 val last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__last.last container)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_results__result_lists__last.Dispatch.last container)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom last__post_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__last.last container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__last.last container) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom last__post__dispatch_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__last.Dispatch.last container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__last.Dispatch.last container) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__next__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom
 use        Aunit__test_results__result_lists__next

 val next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) : Aunit__test_results__result_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__next.next position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom next__post_axiom :
  (forall position : Aunit__test_results__result_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__result_lists__next.next position __HEAP)].
   ( (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_results__result_lists__next.next position __HEAP) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__next__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val next__2 #"ada_containers-aunit_lists.ads" 165 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__previous__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom
 use        Aunit__test_results__result_lists__previous

 val previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) : Aunit__test_results__result_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__previous.previous position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom previous__post_axiom :
  (forall position : Aunit__test_results__result_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__result_lists__previous.previous position __HEAP)].
   ( (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_results__result_lists__previous.previous position __HEAP) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__previous__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val previous__2 #"ada_containers-aunit_lists.ads" 169 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__has_element__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__has_element

 val has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) : bool
  requires { true }
  ensures { (result = (Aunit__test_results__result_lists__has_element.has_element position __HEAP.Main.__type_of_heap__content)) }

end

(* Module for declaring a program function (and possibly an axiom) for "set_elapsed" defined at aunit-test_results.ads:99, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__set_elapsed__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val set_elapsed #"aunit-test_results.ads" 99 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (t : Aunit__time_measure__time.time) : unit
  requires { true }
  ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
  writes {r__split_fields}
 
 namespace Dispatch
  val set_elapsed #"aunit-test_results.ads" 99 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (t : Aunit__time_measure__time.time) : unit
   requires { true }
   ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
   writes {r__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "error_count" defined at aunit-test_results.ads:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__error_count__axiom
 use        Aunit__test_results__e_count
 use        Aunit__test_results__e_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__error_count
 use        Aunit__test_results__e_count

 val error_count #"aunit-test_results.ads" 102 0 0# 
   (r : Aunit__test_results__result.result__) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__error_count.error_count r __HEAP.Main.__type_of_heap__content Aunit__test_results__e_count.e_count.Main.__private__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val error_count #"aunit-test_results.ads" 102 0 0# 
    (r : Aunit__test_results__result.result__) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__error_count.Dispatch.error_count r __HEAP.Main.__type_of_heap__content Aunit__test_results__e_count.e_count.Main.__private__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom error_count__post_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall __HEAP : Main.__type_of_heap.
  (forall aunit__test_results__e_count : Main.__private [(Aunit__test_results__error_count.error_count r __HEAP aunit__test_results__e_count)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__error_count.error_count r __HEAP aunit__test_results__e_count) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))
 
 axiom error_count__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall __HEAP : Main.__type_of_heap.
  (forall aunit__test_results__e_count : Main.__private [(Aunit__test_results__error_count.Dispatch.error_count r __HEAP aunit__test_results__e_count)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__error_count.Dispatch.error_count r __HEAP aunit__test_results__e_count) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "errors" defined at aunit-test_results.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__errors__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val errors #"aunit-test_results.ads" 105 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (e__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (e__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = e__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = e__attr__tag } True True True) ) }
  writes {r__split_fields, e__split_fields}
 
 namespace Dispatch
  val errors #"aunit-test_results.ads" 105 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (e__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (e__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = e__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = e__attr__tag } True True True) ) }
   writes {r__split_fields, e__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "failure_count" defined at aunit-test_results.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__failure_count__axiom
 use        Aunit__test_results__f_count
 use        Aunit__test_results__f_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__failure_count
 use        Aunit__test_results__f_count

 val failure_count #"aunit-test_results.ads" 109 0 0# 
   (r : Aunit__test_results__result.result__) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__failure_count.failure_count r __HEAP.Main.__type_of_heap__content Aunit__test_results__f_count.f_count.Main.__private__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val failure_count #"aunit-test_results.ads" 109 0 0# 
    (r : Aunit__test_results__result.result__) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__failure_count.Dispatch.failure_count r __HEAP.Main.__type_of_heap__content Aunit__test_results__f_count.f_count.Main.__private__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom failure_count__post_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall __HEAP : Main.__type_of_heap.
  (forall aunit__test_results__f_count : Main.__private [(Aunit__test_results__failure_count.failure_count r __HEAP aunit__test_results__f_count)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__failure_count.failure_count r __HEAP aunit__test_results__f_count) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))
 
 axiom failure_count__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall __HEAP : Main.__type_of_heap.
  (forall aunit__test_results__f_count : Main.__private [(Aunit__test_results__failure_count.Dispatch.failure_count r __HEAP aunit__test_results__f_count)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__failure_count.Dispatch.failure_count r __HEAP aunit__test_results__f_count) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "failures" defined at aunit-test_results.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__failures__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val failures #"aunit-test_results.ads" 112 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (f__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (f__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = f__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = f__attr__tag } True True True) ) }
  writes {r__split_fields, f__split_fields}
 
 namespace Dispatch
  val failures #"aunit-test_results.ads" 112 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (f__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (f__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = f__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = f__attr__tag } True True True) ) }
   writes {r__split_fields, f__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "elapsed" defined at aunit-test_results.ads:115, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__elapsed__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__time__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__elapsed

 val elapsed #"aunit-test_results.ads" 115 0 0# 
   (r : Aunit__test_results__result.result__) : Aunit__time_measure__time.time
  requires { true }
  ensures { ( (result = (Aunit__test_results__elapsed.elapsed r)) /\ (Aunit__time_measure__time__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val elapsed #"aunit-test_results.ads" 115 0 0# 
    (r : Aunit__test_results__result.result__) : Aunit__time_measure__time.time
   requires { true }
   ensures { ( (result = (Aunit__test_results__elapsed.Dispatch.elapsed r)) /\ (Aunit__time_measure__time__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom elapsed__post_axiom :
  (forall r : Aunit__test_results__result.result__ [(Aunit__test_results__elapsed.elapsed r)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__elapsed.elapsed r) in (
    (Aunit__time_measure__time__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom elapsed__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__ [(Aunit__test_results__elapsed.Dispatch.elapsed r)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__elapsed.Dispatch.elapsed r) in (
    (Aunit__time_measure__time__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "start_test" defined at aunit-test_results.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__start_test__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val start_test #"aunit-test_results.ads" 118 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (subtest_count : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
  writes {r__split_fields}
 
 namespace Dispatch
  val start_test #"aunit-test_results.ads" 118 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (subtest_count : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
   writes {r__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "success_count" defined at aunit-test_results.ads:121, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__success_count__axiom
 use        Aunit__test_results__s_count
 use        Aunit__test_results__s_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__success_count
 use        Aunit__test_results__s_count

 val success_count #"aunit-test_results.ads" 121 0 0# 
   (r : Aunit__test_results__result.result__) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__success_count.success_count r __HEAP.Main.__type_of_heap__content Aunit__test_results__s_count.s_count.Main.__private__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val success_count #"aunit-test_results.ads" 121 0 0# 
    (r : Aunit__test_results__result.result__) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__success_count.Dispatch.success_count r __HEAP.Main.__type_of_heap__content Aunit__test_results__s_count.s_count.Main.__private__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom success_count__post_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall __HEAP : Main.__type_of_heap.
  (forall aunit__test_results__s_count : Main.__private [(Aunit__test_results__success_count.success_count r __HEAP aunit__test_results__s_count)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__success_count.success_count r __HEAP aunit__test_results__s_count) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))
 
 axiom success_count__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall __HEAP : Main.__type_of_heap.
  (forall aunit__test_results__s_count : Main.__private [(Aunit__test_results__success_count.Dispatch.success_count r __HEAP aunit__test_results__s_count)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__success_count.Dispatch.success_count r __HEAP aunit__test_results__s_count) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "successes" defined at aunit-test_results.ads:124, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__successes__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val successes #"aunit-test_results.ads" 124 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (s__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (s__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = s__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = s__attr__tag } True True True) ) }
  writes {r__split_fields, s__split_fields}
 
 namespace Dispatch
  val successes #"aunit-test_results.ads" 124 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (s__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (s__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = s__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = s__attr__tag } True True True) ) }
   writes {r__split_fields, s__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "successful" defined at aunit-test_results.ads:127, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__successful__axiom
 use        Aunit__test_results__s_count
 use        Aunit__test_results__s_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result
 use        Aunit__test_results__successful
 use        Aunit__test_results__s_count

 val successful #"aunit-test_results.ads" 127 0 0# 
   (r : Aunit__test_results__result.result__) : bool
  requires { true }
  ensures { (result = (Aunit__test_results__successful.successful r __HEAP.Main.__type_of_heap__content Aunit__test_results__s_count.s_count.Main.__private__content)) }
 
 namespace Dispatch
  val successful #"aunit-test_results.ads" 127 0 0# 
    (r : Aunit__test_results__result.result__) : bool
   requires { true }
   ensures { (result = (Aunit__test_results__successful.Dispatch.successful r __HEAP.Main.__type_of_heap__content Aunit__test_results__s_count.s_count.Main.__private__content)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "test_count" defined at aunit-test_results.ads:130, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__test_count__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__test_count

 val test_count #"aunit-test_results.ads" 130 0 0# 
   (r : Aunit__test_results__result.result__) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__test_count.test_count r)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val test_count #"aunit-test_results.ads" 130 0 0# 
    (r : Aunit__test_results__result.result__) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__test_count.Dispatch.test_count r)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom test_count__post_axiom :
  (forall r : Aunit__test_results__result.result__ [(Aunit__test_results__test_count.test_count r)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__test_count.test_count r) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom test_count__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__ [(Aunit__test_results__test_count.Dispatch.test_count r)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__test_count.Dispatch.test_count r) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at aunit-test_results.ads:133, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__clear__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val clear #"aunit-test_results.ads" 133 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, r__split_fields}
 
 namespace Dispatch
  val clear #"aunit-test_results.ads" 133 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, r__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Olt__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Olt

 val olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ole__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ole

 val ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ogt__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ogt

 val ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oge__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oge

 val oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oeq__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oeq

 val oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Oeq.oeq left right)) }

end
