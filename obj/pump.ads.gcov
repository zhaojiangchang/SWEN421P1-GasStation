        -:    0:Source:C:/Users/JackyChang/Documents/421A1/src/pump.ads
        -:    0:Programs:38
        -:    1:package PUMP
        -:    2:
        -:    3:with SPARK_Mode is
        -:    4:
        -:    5:   type RESERVOIR_NUM is new Integer;
        -:    6:   type FLOAT_NUMBER is digits 3 range -0.01 .. 1.0E35;
        -:    7:   type FUEL_TYPES is (U91, U95, Diesel);
        -:    8:--     type PUMP is private;
        -:    9:--     type RESERVOIVOIR is private;
        -:   10:   type STATE_TYPE is (Base, Ready, Pumping, Waiting);
        -:   11:   type NOZZLE_TYPE is (NozzleBase, Lift, Replace,Start, Stop, Pay);
        -:   12:
    #####:   13:   type RESERVOIR is
        -:   14:      record
        -:   15:         TOTAL: FLOAT_NUMBER;
        -:   16:         RESERVOIR_CATEGORY: FUEL_TYPES ;
        -:   17:      end record;
        -:   18:
        -:   19:
        8:   20:   type PUMP is
        -:   21:      record
        -:   22:         RESERVOIR_INFO: RESERVOIR:=(
        -:   23:                                     TOTAL=>10.00,
        -:   24:                                     RESERVOIR_CATEGORY=>FUEL_TYPES'Val(0));
        -:   25:         PUMP_STATE: STATE_TYPE:=STATE_TYPE'Val(0);
        -:   26:         PUMPED: FLOAT_NUMBER:=0.00;
        -:   27:         NOZZLE_STATE: NOZZLE_TYPE:=NOZZLE_TYPE'Val(0);
        -:   28:         UNIT_PRICE: FLOAT_NUMBER:=0.00;
        -:   29:         FUEL_TYPE: FUEL_TYPES:= FUEL_TYPES'Val(0);
        -:   30:      end record;
        -:   31:
        -:   32:   --procedures
        -:   33:   procedure SET_FUEL_PRICE(pump_r: in out PUMP; PRICE: in FLOAT_NUMBER);
        -:   34:   procedure SET_PUMP_STATE(pump_r: in out PUMP; stateType: in STATE_TYPE);
        -:   35:   procedure SET_PUMPED(pump_r: in out PUMP; AMOUNT: in FLOAT_NUMBER);
        -:   36:   procedure SET_PUMP_NOZZLE_STATE(pump_r: in out PUMP; nozzleType: in NOZZLE_TYPE);
        -:   37:
        -:   38:   procedure APPEND_RESERVOIR(pump_r: in out PUMP; fuelType: in FUEL_TYPES);
        -:   39:
        -:   40:   procedure SET_RESERVOIR_SIZE(pump_r: in out PUMP; SIZE: in FLOAT_NUMBER);
        -:   41:
        -:   42:   procedure REMOVE_PETROL_RESERVOIR (pump_r: in out PUMP; AMOUNT: in FLOAT_NUMBER)
        -:   43:     with
        -:   44:       pre=>(AMOUNT <= GET_TANKS_SIZE(pump_r)),
        -:   45:     post=>(GET_TANKS_SIZE(pump_r)>=0.00);
        -:   46:
        -:   47:   --functions
        -:   48:   function GET_STATE(pump_r: in PUMP) return STATE_TYPE;
        -:   49:   function GET_CURRENT_NOZZLE_STATE(pump_r: in PUMP) return NOZZLE_TYPE;
        -:   50:   function GET_UNIT_PRICE(pump_r: in PUMP) return FLOAT_NUMBER;
        -:   51:   function GET_TANKS_SIZE(pump_r: in PUMP) return FLOAT_NUMBER;
        -:   52:   function GET_RESEVOIR_CATEGORY(pump_r: in PUMP) return FUEL_TYPES;
        -:   53:
        -:   54:--  private
        -:   55:
        -:   56:
        -:   57:
        -:   58:
        -:   59:end PUMP;
